#------------------------------------------------------------------------
# Source File Information (DO NOT MODIFY)
# Source ID: 768e56f5-3e3b-456b-b9ff-0a969131024d
# Source File: ..\..\..\Users\bpeppin\OneDrive - VMware, Inc\Admin_Scripts\SAPIEN\PowerShell Studio\Projects\Install-Updates\WindowsUpdaterTool.psproj
#------------------------------------------------------------------------
#region Project Recovery Data (DO NOT MODIFY)
<#RecoveryData:
VgIAAB+LCAAAAAAABACFUstOwzAQvFfqP0Q+IqVJ+ghUpD6gKqgHHmoKHJGTbIjBsSPb6YOvx4lT
1AoQl7XH3p3RjB2tIRNbkIcl0QQPB44TPUrxDpl2kgPPSik4/YR8gWLCFKDuMKZMg1ygi1Gtguu2
VnbJ7RLsK9Ztiq4qU+1JCawe6b1GnZCRegapqOB4PAoi7wj6O6MCqyW+DK9gFhYzdwKT1J3OwtRN
50Xh+mQezoNJ4I+neeT1zf1o72BzqAH7kXcKj+SC5UbO8U7VVA966Nw0lBnnPsKJJlI3dWvGav3V
6SQlkW1cG9mYtNZQgASeQdzwTBtzC7TiW/EB7i0TKWGvJiyE7V61yf3D/gtfUoqde0coj4WsDF+B
8BG1L3BGaIG1+R2LRQ+SvlFOWNtwTyrAL5TnYqee6pyYx94IwQxdbUYi70fvcBB5Z//oC3qU+BtW
AgAA#>
#endregion
<#
    .NOTES
    --------------------------------------------------------------------------------
     Code generated by:  SAPIEN Technologies, Inc., PowerShell Studio 2019 v5.6.170
     Generated on:       4/27/2021 10:53 AM
     Generated by:       bpeppin
    --------------------------------------------------------------------------------
    .DESCRIPTION
        Script generated by PowerShell Studio 2019
#>



#region Source: Startup.pss
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
YQAAAB+LCAAAAAAABACzCUpNzi9LLap0SSxJVAAyijPz82yVjPUMlex4uRQUbPyLMtMz8xJz3DJz
Uv0Sc1PtgksSi0pKC/QKiott9DFkebls9JGNtAMAoyFkEGEAAAA=#>
#endregion
#----------------------------------------------
#region Import Assemblies
#----------------------------------------------
#endregion Import Assemblies

#Define a Param block to use custom parameters in the project
#Param ($CustomParameter)

function Main {
<#
    .SYNOPSIS
        The Main function starts the project application.
    
    .PARAMETER Commandline
        $Commandline contains the complete argument string passed to the script packager executable.
    
    .NOTES
        Use this function to initialize your script and to call GUI forms.
		
    .NOTES
        To get the console output in the Packager (Forms Engine) use: 
		$ConsoleOutput (Type: System.Collections.ArrayList)
#>
	Param ([String]$Commandline)
		
	#--------------------------------------------------------------------------
	#TODO: Add initialization script here (Load modules and check requirements)
	
	
	#--------------------------------------------------------------------------
	
	if((Show-MainForm_psf) -eq 'OK')
	{
		
	}
	
	$script:ExitCode = 0 #Set the exit code for the Packager
}


#endregion Source: Startup.pss

#region Source: Globals.ps1
	#--------------------------------------------
	# Declare Global Variables and Functions here
	#--------------------------------------------
	
	
	#Sample function that provides the location of the script
	function Get-ScriptDirectory
	{
	<#
		.SYNOPSIS
			Get-ScriptDirectory returns the proper location of the script.
	
		.OUTPUTS
			System.String
		
		.NOTES
			Returns the correct path within a packaged executable.
	#>
		[OutputType([string])]
		param ()
		if ($null -ne $hostinvocation)
		{
			Split-Path $hostinvocation.MyCommand.path
		}
		else
		{
			Split-Path $script:MyInvocation.MyCommand.Path
		}
	}
	
	function Write-Status
	{
		
		[CmdletBinding()]
		param
		(
			[parameter(Mandatory = $true)]
			[ValidateNotNullOrEmpty()]
			[string]$Message
		)
		$statusbar1.Text = $Message
	}
	#Sample variable that provides the location of the script
	[string]$ScriptDirectory = Get-ScriptDirectory
	
	
	
#endregion Source: Globals.ps1

#region Source: MainForm.psf
function Show-MainForm_psf
{
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
W2EAAB+LCAAAAAAABABku8eOrFwUpTm/Ur5DqaZIhXdSdUmYwHsPM7wJvAvg6Zu/u2edo0wRQR7O
3nutbxHE/3bKfDrL9ebTPf0f7y9bO43/1/9E/xf8P//P37//8T/+t7m2dTumvdD2pZEO5f/R03YU
pnX4X/NW/W/w/3f4/3nTf8f/jwqvXgPUHFHrLMOZPMf8vz8sw29RcHjLt0WqnXKAB9wIISfYnvVb
pU1a0zbbWuXalhoZ7bsuHFefIPZNk5D8+0cO0X5ud94qVpEFzn0HN54v8Bl5qgcele7+TFA9QRos
DksCASoYcR9H0d9KgwNOympx0rFyDkOqz+Dfv1YPrgJEaTAvsh0lwc1uzSTQviChAXbkgaBF8CaC
rNAjYcFF5MtikmCFSNWpIq1HmU+fOmw1gKchyX//pKrl5XyElpirh4IGcBMz6ebh6IZM9zPP9t9i
Br2wXaWKSiiRZ3whAeZ8RooQXYiSgVM8NaS3XohcvWdTz8e+zjpggwelIbHSZI2asAMwu4m+wC+h
gBhGmNWZTsEAcGiFHb8ZAqs4gN4D855Xz45C1vK+Nvr7Bz443dLbYAek8f2dW9Pa0zYeCni6e7fw
FdhB1tRqWOweIIjwgO6sm3XnztNrP9uUb29Za+jK/ZOq37Uh9nlu3/GQNhBka+7HGA1TaxTDfRg2
MyT6iFvCxEWeHHVG4Rg+/sjKxmIzmupiqzOYfrB7G1dW2v2Yv38oSRchwKhCgFWX42Cq2gpKmPOT
SpDCNK8Ryf4sgAIFqU00iHAYYcu8hpmzyzctp2b7KaKZ9PgU+Xj8/SMmmyWgD0ugWgkXmwg3iGCT
dnG0R11SCoY07YLCk3+Qa1dw6HY8a7k7rBtlaAV7AiaRcQjtULBqp/ueDcfjYoRU9VgbNoZbmNAz
NCHGA6gKcvxexLFWJzAWQnDO6+wVfTaTMuR2kzYTqCXlrUSYx3qehgHTf/9OdfeiCG0KsOhd9mix
apjWMzgETlXSD0MXHKIiJQJ0flKgB3bu3Fn9FMM5vc2b2JNX18P4Ht1CIbj+9w86U6cjObjwS16W
SBvrt6cGUqRz8NHurhzw0+Yo+yF63LKzloeaf2uLkdZnJPsBGzFofzBdHo/0/AR//564OSMj5xoC
k6P43YCLhmlvFKywYyhQofDu+vyS4KQgsmys9bq/ukbI3zEy+Arf1N2pKnW/354iB+fvnwg5XvAD
5LUn3jWcZW4iWWWGMkcl2tBL9N2VX8NvBzwIIoXcCdug00OcneDKe5iz2pzKAyia1Zwq0b9/AfqL
CzRiS8OBkOgssTWUdtTm9jOthRJcLu32yrD/pY80jXOlhCBKgKam7j8Ti3OxP1CFGSZaZELyrWlO
hyyeU+FxZR8pledy8fBvCMjsanWr7GF65xwTpKSXyjpJB+KIFv5sF2qlQLMfAYUFnrya6QKbmR//
/q11IBE4Acq2sD1lM30VFtq5vLZhW5zMb0pyDkOiTkSCXEGC85cq3wowurwi799tZx8XUB4bMfMN
yb4dcvRA0sBO8Gz1lFf2mhaILSEQcwP7TzY/p4CUEy3l5y0tWB6jZvksYIwxKCRQX/w57kXrWqB/
RoAv3jkFfAWluHfix+WDjAHBIUoV9ONxVHS2kALWzmd9Cp/4oAo6VwBtpCwreHoy/sIHLX/Q5X1/
ShHcQsZ//yjst3pI1TitVVnlB8mQLwD127e6RnfwyfIS+mi/rc9+h65xuw4D6MbQxXLlpydlIkn0
Ok0fglALf5q/fwBZu1ndYQ9TYF394+y9O8Bman6lP6MwpyV9XhnUlIWyNiAjeIGauz7YbywO4Sht
RWwgsqWHGB2nZ35rqvmac1q5CteRBnZhHpATGuoFSqsbcjeJoRVTMl8Zf7X3SA8Gs3hh8HPoL19u
JWLMoDKHoHtZIMt+//55MLoDbk3PWilD1FezVl+O42A0T7tp1kv7kSa+z1xvBui7V+vTMtTnt9uR
wXhOFM2UhiDokd9lGVSvvjkPPoGG+e5VSdbSJW/gsCig3mQ5ACcTBInlyHg3CHNZXFvD97RM+tWF
gEylncOQHEINK+UgCJVOBP/7t0A45TOlpaOiJpDY/bmB3xzuztA//RrWZeGz6nHvJ7xXxpPthBLT
FqkvBd04glOI5H4cF3hw0muP7VsFJSmNDV7P6HqEmfRqgc2lFVds0Ea8GIRJGiix3Yyg8jtQtnfv
KojtKwHnMtJ5MxgDVv4TDymL3O7VN+OLyC71804w58WO+AWZOe7HfCU7EXzZUk4NYMNwPYSS9heg
pOziJ71vQWitUdyKtKziWfHBj+gzre/avB+MCz7QM3gUVfW+kUk01iNTAm/zGkZVqCroKKccBzBi
fU5FE02zPzkJz3umuuCyfIKdAnmLNi737TdHbk4oh0bJu2EO7DQughoPLcgtB3s+97dzTHgJTEdL
RIjypMYnd7J4DL0dPOiytJwcT7nhvmO6NYF3TkupYXOk2z81h66C0yHMhorhTXA4942lEMwlFvI/
av4OrgRoRRF26+aSy68UPfODZbZcgtuHZBWY8f/+zVLhfIyzaHb9c3yrJrs8rlWblXIl206+F8JZ
EMUIVkFLASCKFMaKH7PuSVWBwqltpr6+QWIFaJOskFfJHRm/Nbkm0BqROnhHsudeK3x2A1avR9ny
HsWRwASzEORMPw4iv46mNuBcVIdMNWCH4KYsk7tyQ+rbb2Vcn58q1aqteaxW/lLaSbDLh6DbuQQM
tjybTZMXMDwPLROyANQdCzYFawl8uiC+b516ZLRWbsxI4tU3UGScyaZRiYJOunC4T9fhjZ4NrwBv
vh2LeJ7m5In2hkO1cks3IK0fpwnBKC9vn20pqRC0QZWsWpqfXkXqUwrYvBGV/D3cHANc1xBdk6Ej
E9keY2bPOXBXQEsJ7jSyRvEs3zOJcYWnDA3SCO4oL329kxhgLvX3z6faEvgx0/eO3BV8SgWFWoEH
KGgzxqEF2B28cRYdH5LdkErvo7IXS6QO/TIAaKpRjs+E2oSltHPDGa8DbguIhCB5uh24PBeNoWSK
tqdVuRWoFZTil0x7KmZ5N+fdBCSRgM0Oc40E8MMCQppfLHqCe2MwX967Npw9VTvYwO0aFy06r+8C
uJQ+daAUpdbC43VIDfbG4yF6aRkq0q2RqhtbuTWo0hTwc1CQ/FDLAuPogv39u3fSLRT7wgdg9QiQ
3pHtqCuID09/yEogECm0C3GSWmy7syI6fm6tsje2z/HqAzbKnuFuJi36e0nk8HYIiR7t5LS99QpW
NVL1aaBXBYNdbFP/AZJGYHSPp3bJfXbOpAkPHIkeKBayhYouBVtNc9LU66vf3r5MXmtZhMfzqRFh
U2EUVH20LIePT6UGc/NkURA63zK+LGIHQDC77ijov58yBXA3lC8K3MgIxhXTdtYDyV5FwsDQUrEE
L0jPPJSMpKDxI6S1EZwXviPgNmIITbsWUC45enapNU53Abb0SKewAaAfoaDt87BYf7zfWbB0Uke1
7t2N+pFnRjowriXXIopMs/oWc5FomAMTRsHucB4FRQ2FmPF2Okz1TzqCn4nCVW4H9E3gwleRSpMP
FoNRSfOZjw3Odg2OxtYajNfd0O41Ui3Er1jJcuEt4WgYZCFKlQ7woEXuAfrINJX9LpMufBFMXl84
i7kaNHqayoDSKiqqx3mpZHN+qIUExKzla7rkragJfxH9BrSGTg5DZfTojABVz0G96IEvkKGK6YV/
/xhci4VgLgyaXJg8ypVkXakuqtCmg6tC6KvZRzlq9EglGEHtEnaG5uzn81A1c2YUCjMkgXMyYkcr
Xv79+0YoV5s5HRklaO2Bl2gCPVvf6QMEaKUNB7foMKa2a4m1VkNWXeNWdzMklbNiCLRolBb2WLDI
EQFG79R3rsHhWd5257lI9CQ4pqWUqne58es8moqS1JjlEAHe3UU7pplR5ZAVnv2kgO2twssfLAtR
/AoKK/K6DM1DRRyCci7Dds9VAPIrk7kt4DeovXjlPcd8yFWiPmW2nM7aC5ZPp6GEi2Ri3ZkFZNTc
VbawfF6denNWxi5qaojmjME/G0DaCRlh/y6xGdSQVaZHq2hkheYmj6rJl6tuwgZx/IibEb2DbwlW
pXppNRbaLv7J3zn1akNlMUDRGMxb9bp58ZkH+vnU9+sHb+IpN6t+Pux/GSbSrBSQwsibq7QZYWG/
IJr6AP2NBo9qnS8NFtIEMujjgfau0aTb/h6qP7dDcWDYMuTyM2W9umK6qKq8Ye3l9fv2XFg+Kzrj
5H3R+frkZVJ+Ugh93jnFFxZ+qe9UFLtx1j0/zWQ4fhiqQcpHfJWWqjnLOvynrDbvffdBJl/IKsnu
00jB7YMncSzCOdAJurvE378GhWDxdhvVejdtwCnMwWkyo/dZBGC6uc+vDlcTDpcqN43nwaNVLaF+
lCD1o8mcDtpkK/pZtX/ByrXeDrG8PZ93mh/H8KlRMBrS4Ryw6NwwtLfg+8NSiEZGA4+BUBF9ARqq
ASgjA8giGR4cA6CvcGeHKY853yyz8MjDjIDaGM9w7gaBu+JxAhgA3OYr7SdmrMs+1mcakFJnZWSR
NEAD2Qoe0Gth8OSb3tn0U8wJ6W5vljk/B3lM1o+nR0rK5Myiq5UIwK9IyeYuxMep6SARVKEHhX7v
3EBdyRV2HeoGPz7TT56fvBHEu9jS9l9feNwvcCtng6KXyNB9dFlj4gDd0y8hTg1oFHkiKFkiQKl+
iS1PgXq6M7EQ67LY6IEl5cCgKT/oCAHLm2UUXyPdpLEwLFilEiHs9pDuISeoMQUEDG4x+uFL3/OI
UETfoSOBAAzup5jLB0OTcXh6wiQLxtsbHnoZqc9Kqxx/peKg58VX34+rKm9ay8oKRVyT2vaLsAsy
YXTQp9hxjjxcioAeOzg8GKmxKEQQBMgSfuWcht+ziXsh+3BEvh5nESHVacYmfMqdpKVMHRdDEMHv
N8Vxzyo9oRdfQO/n5aHJWQBTFDyfkangxYMFUTugv39HWmBsgIt2TpLmjytX22zfBHiebxoGc0W2
bghUqnuZIfKBiFd6b5zeFW0/dV8QfP/3hBUggtrQlObLvS8Fo27eWCSJZVe19ssOa4TPjL9diQCa
tjkaH0WnhDosIVQfBa1COryUcgRKs0h1+MD7/ebxVsmsn/SerXydBWXZ/ZhG4fxJzjlfKQUO9LiI
JGNQ9jX2hA9mTv/g9JEe/V3BT0KT1SFF72vnoxDl4EDEjPi9So6av/mt4ZaNNwY0fhXqOQcE8klZ
HOg0ZSmU0XgO7Ru6rqeqnHR9B+8TaNASIPWIdE6F3l/p5UrJBO2/f1x5GuGvnrWQkIGNQ1P8AZgk
0cehKypKePcNtSqbgzzojWtnK+qtF30uXnzNFQ8LB3qvnGiQntzA563pGycj/uSQnQaM4yycU2ZD
WU1A5bMSFiWiIephdughaUWiIOW8Z5/RHJBA8PNyzUZD2IJitFHA2EpvL0WzAFrUNJftYPebaQv5
ISAiHP4GceVTBVsJ5R7QaJyRWqhfIWp2A1UoK5lUBtulnBGliTAptiQKk69n6bSC3qcZi4VAWWHh
o+dNE/Aw430qUbmqqTAwTRdS8G/3qeLmV0l2gsl60vLm5tOh+hb+pcNvSeTgq+Q4wGg02rmpWgm4
1RNgQsfR8uORtqugCgz8ilJRlCiZkUqCDB0QII427EKpA3E4qusOAAuB1Qo3gOz+y/WFU/RvE2E+
0GoSOMle/mXEfRvrd+JWsN3sKqpLygJ0LoQ3d0Xl44TnkjLfRHW0BEEs3a9CEgn6PK/2+phipUhX
yiLxagZ2ow/ZVE+GBdgB6hItx/UK07oYPLAAEJwxwpR57JmDNmBzFg93lsdII0UnAT/x9awOovBB
A+OHdGWc1nsR7M6BiaK9rHawMZOTCKz3CvEROAwLD2QUIVExNU8AB3MazGPwDoAJ0jwQedWSgFaj
Kt8Kcn25FhZVOMr9+5F+AmreAc4d3bgUlJvjgiYWbqON4L2wkx5r0dIS8CXw2I8kIDwOIdreyeIC
shafyQOIT0U1cZS1B7Zp4bmaEmCJIIHX67FCnZzj63f9VpDi0XhpUABL2i9mf58enEqBJtQNJ853
bRJVFg/i7QA/3sEbmCgcvDKyHEfQ91E7rUbpiUwy27H5hpbjsL7V9QNx/lxh4/ZRIDrA4zBo0IaJ
+e9fSl/poeDphOPyTRr0skvdHZnQPKVUcRcEzaplxVUn38HCYEsDfMj5U0bAAl/YnoNND2aEZRhe
InzfKlho+Z1g4YAKTCt0TCbteoIErII/GiF9E1DigNq4ni8D3nrLg/VvQ0q0Rd74gZLABh4VZMAC
b1QP9XuVPAoGauwswng5zIXKEveNkrQt6m0j0NEw4bJCkpVr6yEJI5dz6NTDV+jNkAYgBSyCl9qr
mw9HgPY2/vWs4kCIPBWwOSxKrj9h/uDB4EeMh5RpAGW/iaDKzmNYUf2sMq4EBpeWRsSgdj/qE/zj
JuB6qblL7fe7tmpVMtDEKU6ZV7yVwvrXEKfxNQSezjfcrSA2pm+gbUKFBeRM4tftnZydlk9YLclv
QeTRWtekzt8aRf79m079SXmfgVNoRYFk6kp0LpAW9EXSpRqu0nopRwdxaqymldHxPmq9RYvBIhtW
Uq51+jGt6XU0fD6/l2r2LWwBGk26kBTNFS+elzQiVOvXn9xDQLc6Bjy269pJRQfTDgvhDwmRXxqr
6LRQN8l2HW4xkYWLMurlEACEs4JuP80xfdoSMweYnxZSKhzvaU1UWrVDeWP7RxGY67IPEJiNen0X
3zGLLEN7TKM8wkaLhV908Xu1l9MDKXTYiXzKC5Syqnpg8CXQxTzHPptGacM2qsilXxKKF2LsMJYe
mrRQEvXFqq9frOPhlzOHEnf7zkIDk4xNlkyHvFcp4Yjt0ZTxirCQFGBq3uxDVyElVwjmGFO9M+xw
7HmRAAOzlyLztVGxAQlsd+C12T9vaqMRQ9Aiccni31caulylpfzbwNqbACmrZVVbnzKpKDKdkt7N
4ZFSyo19EEZt6YxitK58b7FfhS1a8XJvVdGiZKWemZfXyqrFd3Y84OwVhowRkgy3FWkOEUa+e38t
oBpjHgrz35/vLifsBDxS+8ZFkVMj6R/kzc5nwiWRpdEIfZumjvV8aqKhFbgZxDcDjYgRHkljcqK/
Z5UTtDEj6AWe76KnYgwR6lt/m6ajnzXCkoi8V6p4rrzkLXfQfQ+AlcFjBS24HrxYYuxBHQFWKnR/
EwdjlRvmShj8seGbNaRfNrCLd6nKrQ9GW3UuYf79Y6XbKJKbqu6BJSRG4ma+Op+IkovpgbdmFkRz
wAsDYkQVQPy6HlfpLscFIn7f2XWexrjt6s1MU530LyMtq7xDIJfd95f6hna1aH4ileiXttAsGXkn
DZNH/fCVa7taTFVqaPioaHmg0+Gnscr6qMg93nz2/iu/5OBdR+0MkyEwqD8gMBjouUh/lCR9Zjmp
07yJf+Fg34vCb9x1/4pLLJ0+5hfM2195i7959+HwRtZfFoj//rkvgNDAy6LsSt0FK08lv3+NGsUu
dmLwb8LbVXVSPiFMnMYQl0joemz2YANOUi8p/GgzZwfwP1kKxert3nf7cTE/cMybnyEcP5AYBLvj
qGYGheKO4269NeRP/bhjnRshyFmxjinOzVpBXQMmxeONyFMM872a/q3CHeoUiEyz97UgnpTGLiil
g+Gfwg8OF9i/myX20c7Ln+qgESBio1I5DU4eRL1LcONZVqeNDIveMvXtEEBn2BbJ3B2COlhmfZXB
4ZFPpIbM2+oXq25ve1kPPf4AfcYBLl7Prh7t24S+wa57ilwy31QG8lQJ9ZLDA7dPGH6QKJaduQoD
eUFUcOZKpF+0OZKvx+nhq5v4LACFN0Dga/boSX/GQ8Nxt1n9mjoX9oWY2lfK/v7FTKn+3tA6Mo+3
MrZyxb6DgRr5vpbRGEqwaLSukXt3SI1zbehBGg3Q9n6VZe7JDYeuRrXcymrGHS/4+1euX05oUR0Y
Clcqy+RDJsrORBdqNqRXqLIp312RyXWM/NrVrl1+6zU2WVbxhhj/Xklwg2qWZsWoXeS3Cu2+ezrO
oYpl+SQy9QzkUHkfGz9bNQ++VCJ33yCXdUNdlx9E+m1de8W4wXe7cap2V5kLf1XFOcvemyh7hGVc
ZKFY+LBHCb1/RrLe+TPPAa3pQ2yecu3Mq9+SLendDTPY85rGkB4Zzijb6S09BmvNEMTNVfe6jAFC
bolvT5j8rrYn180PVx3goaFrjos2nF2P6xudSOe7x1nUJY9lisn9o0LWUbXBz5lyTa7iMnpvNf7+
/TxOPkcgo0x0spdtPu42NNmaxLGY9omjXPyNkLDvyMkz8KH2sjdZUye373fH/BS+YlVga6M7NWtp
/L9/m+ismXKpLBiR+7O+Pu+Z0HiMdiGtHpyHVqof3Trl7rA3AeXfIlNckxeuKucaZOKEVJvuRNMu
KyV/X5cR9MEp4iyYc2p+1bIXMCtUcWSWb0XxtA8snozUuICfbeMoECVNYb8BgJ+XpZQrSp4g5XE6
FrzhI7yMhHRpp0pHbZiMq8bXNc35K/6yfN51BFCmEIVfUStT59FpPM0WLeTOlOYLnbNaAxHnvlKY
UNNwg9j66aWanGKkqm9KXrIs55GfcBId48muO4Mkpka5JmhJn6RbxZpaPsUGp983dBn3puzGn7zG
x9HxoqoOdJv9/SsK1g6x9hu/wWsmLA7aaC9u/dzLiTKef69wOaqCn8uvq33xijUX+x6VORcdi8qp
078qnPShJxRcf78uE5w59diwiU83LLbfT45QX5IyMBMs2yu37VzKCpv5NfiJHUNbaTFplU8MhRoS
2oD1hHCGAAfnyclSzf/dzeMq4AN3HEe+KXq/zz0RDw0SjeBEGhB5/d0Z2du1atek7c+nGgnDuz2p
/2kKuWpTEYwY4DntxSun9/ePYh19SOyjL1Bzy31FSfGoEKnGmD9vXUcvnwtR3NCwkcptt+P2KIGc
h5fOB+aaHDoe4W18HBzrA1L1m4xi7jtpZCPNoviBcl1GgzKPraRilY1Og65jQPrq7pOSt4AMv0eh
uipQEfsh3/0092K4tSG+29D37e133/oBp0yR/F39vEqpsFjM7Zz9xglpHDUX+h1QSOGYDxRh7TqF
AiGEiBT3TKDhL/6f3a0Ev0oi29USXwfMkLE789W5AhlhV/zrngE+z1gAlWlNHBbjZfATqkN/+H1S
ZwklM2SWqPX4X02cF+1pCsa1uRjiYmdecqDAaQSjR5/Usm54U/sZm9GXvKVJxpHFMjZ9gF/2sQke
KvTxBvT9nkhzWzezSt2JAwjpejGfgE5VHf/+mXx9ZuKxsdVne8tPvX2zPLw3oNzs6jUdCYH6yAdq
00I2aoEYX4hUPVfJw7bPTaRQjLJ1KYM6XJB9vNwr29jifnEHqH3PWGhRr12JgBCKhm38Zospy2Fl
4jWMq3sk9ebiK8ckJzQOcco36oqvg3NpLASQc7wcguofrJEWYvxQ6YNRhYVP8Sf37VPq3hFmYC/A
ln1Fe1Sn+0pLr21WnTY0OK47jX7hjGgVkdJ1f9yv1N8s43Ci6X0B294nPVv5xvri+0sdVtZfOTvp
Eqt1qLhAuIe6v6niviydEi4L+9ubfHTnt04gPA+k4VXl/ffP0Quth1nBrilcfNU9muIirk5bGEA8
dQ0PNKWaluev5OJk44RHlSgZrb4Wd3fZncuV3lhnvg30uX5ePwWwYjL7/KJ3J1Jr0kfn+5piN+eG
vNkWG0D9Dw7n0P3KClSqaQ4Yvd963yxXEt8guerLh32U8hFDwO3fP59evN+KgV/1UEdvSeEBG79o
txZOfc/oF6/PZgrysQn1XlW9LhyMMBooPwUaUzvSKIA/ouKMO52Ravr3TwcYwbMML51cFiqd7+PL
6zHxyp15xKZF+1Ci65GiGeXyZxggNlzsubZ/vvR1nbu6TmnKmioqmZRul6/LnMOiTPH6tRI37qRu
w47EU518jsyZqnjgE6yMiwVsj/iIBIZhG3iQBqtE3+/0NWCz7t4LhduVOpWvhizq/kXqk6G7KyFr
WEyXgNpYSB/smFClWlNcT7zcJbbLHv7+0M6T98XDdilrlcVkxuFXMm334csbafL/npW6ERya8I4i
Wqmyx2T0U0mvto/CRbpy7biEBaFhPiXHc8FUYcq0SkneLTDnfHmgB3oR/XT6EgGY9XJIx3qiMfmX
ks+JKNyf/CuiJSKm9MaxyE/IkzZ0iZD+YbhiND+ZpU4BY8AvIkjbqnu73XscybGs4OzO66csYN3b
LHllSyhxQAlfukY7MP0qffL5phHPphberjJ8OsrbMF/UjK9B8OJCLBjiudxsHLxcdd1Cp4iXHL6e
2btmS27uKtj+2ZQgYg/YbfRKYDbLd2Wd0vNR//F1GNqOjLgU5Yt7ksdDgJvKTF6ezcsdv8qrP/Bb
BSoSbC4pnuaY7wgTK8fiVTpuBHq8Pl0DsXqa2J8hO3LP5jeAfDjZ1VbDM8pDs4SCcZyUEzjNLQZO
eP10pZIAV7F11bs4n7NvqI7EsxbJpCDQhkNLCyvVUW40btlmvlO42Q2ZIts3Vt+a2Zn83Mhz9XXW
r/4S1/l0fj3q3HdpL0Mq1WFIZIR49vkT+ezlGREVe9vbBUdwLyqaiYM/pp1MrUH702VuEL+D9PU/
541GsfZeqWkdAFn+kECsR4LEuDc/OxyPEvnoGmV3URm7vPOUv22yTjxP6S8RYYRsAeKVQ75qA6Az
q+SILUHy35NXxWHu0WWs7qftkr1jON2WNzGI857vYfX1z7LTs+/jRCbbYbmg/mqjR4CkcW6Der4+
2GNKIa+9MX6WNxn1x/DToM1P1IaMdlu40w0qwV34uR8odvxubimdod5ueKK47u8yDtaqVrq+RH66
CYu/4+Il/NIyJxT//mlieIKRbv5+9wM1oRvy2wdm/KcH1p2xbPZLQO3nk7cxnPKmfXZqEGZOL1cr
+53OwP39rkIPXXTsOe/NWXfIa+OhKnFDfsgwHAR0nyHEGlF2FemYqAK+LYh+G75Aup/CVQRfblI7
jQukHon4bDRmJZwMxkwg5VXLxM9vksefV9SYNrV+kqifiNtHr+daE2fr3WjLYLY266D4e6mac8lY
v0+NFoo83N/vD1dlJmPnZqCQ5u+fKjBU7KBXPpX7Ur/5W9+ttj6PYStaDdb4LaSZFUmDNnlEukmW
4NQ4YOu2hriRXntHn55Eie8d+PWSv3+wfPsFvOO8BM+Ttq4UxpavzmPf0ttbp5XxHXOw9oM2pMGM
57nL3sSMEPl8plPbDKTysK1mfVesaed5NaRdi1cfFJ2ATDJ8jA82cnRNkQY0W4KHh927zxi7pmFX
Ph/D/llzmHMoBuGY3GZAxQw1UCsHUNSN/mqI6r4uwD6oG5JFaxLyFObZHpKoFgrCgoqOIzNL7l/Q
/LhF+w75Ts5n6IIDqrA7sZOp6zWH/qXauMVfcsDtDjieImCoibzF5Lsguuv1gtIMxwUbjZ+ec+Cn
dfSLq9hA9m+Vi/BVewSuriVUjyYxN0LLnTYkPO+cTuhxSLG0sWr8NUX2EpvM+Pm/lgPrZklOXufN
++OEMdW4FSE+6itWTi3ie/z5NXS9BroqLOYvFEK9ffmtESgTkge+/XRKuYp5VlR2zA4fmfmZPiDK
RL4uuzGNbvlj6UwT3/rQ+OBnTstnVORaFQiKPK0gSK/yf/9I3ls9LOvsn0GepStYJRpSCRQ/0o8L
iNSogk/kxNhz5iMk8ulWlNw+ua/GXDNNuD4iQAC220T/xmf87d4GYyCe7rgcwHLPzGDCJ6eX0nim
RNy7dg3FbSpny3qJVewNSvgMlWdR8kXWJH2LOZY3vE5Yp3lp9nZIOrHa9sjkKgYcqt5TmqVzF8Z0
YzXIN3em58mQ7eTpTYZGXAwvaCs55hWQfjaOJbF3nnzgiN8NhkCrN9cT80FiE4YJdi6O+YTihxuy
Zk0MFlw0enJ5UziaZvM7zyv51JMMa3c4mHn51eMMdlN3BtDxm21wmBV//3J+iWD4E1cWKO4ZytHd
1oW8MHhhHiFjoWSBh4vP3ZOJr3rrLV6QACHrcGWYbTRkkFTNJ9UDScfDH/1SzdgunHwXeeBp/Ff/
iI8ll6PdWEJUxeGZWiKs5YMw1eth8r2KSY0uFYnPEiSjA1GczizpPbh9WbP2KvmtPmjbTxDzDjaj
5wXxicYyElm0weI+ZG3nOiuWtfHhFTTPnsn+UlZIoW5QYspSlcX8DDmb3q3Ryre/f1dYwB6+VU3I
96TLA6+7gtCKgzH8BPi41bkP+G75AlJkA8mSG+hT+hwkOGrejcJ6iHKuN9w7OAxbvGeruV7fj3JG
I8ackUVNXkYIsHweKTwTTdTE5jd2Eeb+OfK8dB6BAUz9KUoJiT6uzrijE3/qzAjfBsneRDmr03t5
1n4XgcAnsff7pZkrUJvBByV/3Mi6sFb0xZ5Khcu+s1HDtmn9+h27sRdmuLiQ/8Spyo+twgwvRU+R
zH2WXwLa3DBzLPzrxuQTC6JQDCkNxfS+hIMv01fGPhGDk9HQ6wOIKHFYkk7datQlywTSDkQjvxwS
o4jqA6hSJpfzeb7D1b4TXgoJtMXSdaq7tJDzr+1jEvuxfBkaZE0FK5HFQ/NjpwD0zR2FlnQc6hoK
//4N0Gs9RTPMNrC5/HL5TmE9ij5L82sIuql49ltZgpP8WKwxZ4Fq/nqCRc17M8FXfRNeDZ3CvfON
XX9z/f/3xYPUg8nn/HQj0YsNXyMyc+7tzbTCO01RPPaDdnrfS8RVZVN1kqZugwhI5dd3JbaE3t2x
mFtdf//cNEfXFTOXwE/27ENaQ9Q9IRtAQwpoQciP8Df8VeFQJnR7YZKDAJIHtC4KOg4BpdrXb634
FpmuLFD2pWj2618kbo53DajcFJ+oxcldGfi2yWo22v+m+eu6tcTcFEH7+RX59sKwoQ8h9qqzvGLb
E72AAvZhtXffir7IhwYjI4WnygFTmG9rSjsZOi5/Xc+8Ebwod6gw98NJjyqFwe/ue4EVORpoJdnJ
mnvenF+fthFCfSdL0XTHyT+h84tezBS7D8b+oOnOk+yBAyVbhHmmxMgV8bjEoMT+QrXIC28+2tdI
pk4VxsuvcR/1E0xvdqbKxof2n6BhBqbuDs+ebo1czNYNQV1z00BXxBcRnyvGuOu7YyQHCztpVd98
l36fpVu/zq39YHWshRr9+/ch2hHrVlX/1NKB/E6S1SZnlm8I4OONyzEdURPfyz7DZ3Y0FP6NerKe
YshcVnXRPgba4a5sFezHFPHmhWDAnlSBYaMcO7+cvoDuGgImCcov8UFYRZR6uhTjgcnd45Gd1LOm
2BMh7G725jLXvm5Efq50JybNePXNnPdz1IxCW3jQmYbjRGVMh5NeEkHEpdfUk0HG+kiap/cCzK1b
rdDbT2pcnTRiIWeJ4LAy0T/wcuBfGrTbw9jpj58A1dIcjanyZmLYn8W/Fkec4DszutUaLkmKVtdb
3/y6OW0mADjMzBHVBeKbLVZS4lkI998sk1frjehX+GMRA9eCY9mtB7MbejawzT9njAx/hoFfjEYT
gag8kN3UlBuJ7WtAvVcmpX2PI2yiFAL7b2rTvuAwKeVdPrf421KGtoXqzQOQMRUI5vxexy7bgx+0
ytZG2iEKYwweVa9aWWwvVzx8OUzcA9Rxs6re9LH5MHs8MZ6LIsQPSodcshnluEiuL9Q/5soChqep
y3I34cKZNmvejRAfWylL9ks8KLzhwS+26vKqineyHqBCWAT6bqaOFHpCO54YTyGT9xFxDfPHa+Hb
85FuPX6XZVHOUs0Cx4RHvzpggEq3u+sHVDwqiuvYW4VRSgoXmGpfRnt12qEDb7f7eA+yCJOLvn5E
7y77zbHdn0YeUHKcj58jfRHt0X/t3r5zGmf0wpretZp//0L9DbE3HN4/RMdakrn0ryfKFKbJHqHA
P0xu2AmSiW7wJCdHwdKd2ZPP6XUjkbvtuzQtHDmechXmzTd9ZLHnEgzcXdilCE5DMF76/kt9YHWq
0lS/qE/OdiOowFF4n/qBcsniKoDYjKTuXasR/DAIknmbaijrJXxRKSGOyVOUSmr2esqscew8VbaU
R8ofweE4WjEe5wa+fMsinu3I9OO92ENgcUA/QwcLXGXMHp939H8OqJmRGBzXXbXTmUYvJlqsUUdG
DDCpLkVdTfZ1LXDs45zBvLTDPovzKgk03kNVOsum7jsJ1au5QAj1y70L8lnN+z7TJBsoRyve6erE
vpuN4Pt0koJldg9/ALsM8DVdlbZw7InJameGoJfNr1po+t8PlIawhJX+VcsPnStm/eg7U9Wz+ZiH
6WL4cCTTp5AOYQ7PhZX90UwGXAXFWWsflE8T/ZpV2FCMs1SMyHkpqBfq4c0LERx+PXkDnJirV5Tj
DYYccFhivfXlKc/q1oK3kpACqWAQJMXsRM34ZjyUlB9DASxij7rxtdVkuIn7fLV3RKfkvRwT1hAu
qV9erCK1BT3v7d8ucVD00n4P2LBBK9kXudNRbZpJmxvQBzWgzqqWgfeFdaemNn6V3Gh3A73oQt12
GWh9kUwHcmQKg/UNzUoFN1KOdZDUcuQS7zUY130nU/VDJG+PJO+35YImOEfaRxead+rlKg0j5d3X
X/2G8VpN38hQUpMtjHb9aB9ejokwGcZadSL0eRqAOixZaB7H+23UsL4m3++fSKJ1+6G/f/+IEEpn
F5npuVOMFxTE4SuE9PeFNgYlGRv7Bd3jgY5Jk01h0y4gXHsHAV+0nI27QdsZglvUHL2biew3L2DJ
71avuq2fub0Gg4J8TMTiWu4784UCGMYNO9HFM3KjuEzO0hSMtKuDSEdyb/jviwfMshGkaV5Yxu6v
9l7Wppwk4JXq90jJudI959Tn+M3P3aXwghSCJgbo/YZDAmnKP/92x/EShOzn+7xPwbj3IGZWXarf
R3//gFrgrw2Kr2b6wNaq1bHPX2mziwQUghEHiln8NJ4hcCbguYpbX6+4Ww0vYTfrmsUjPCkTtnwg
bZzxqmXmZqRQTyiE1PdSVgSN0CFDsvjX+7xRhdOM1Iw2nO3d6dVgafT28qWYtTz60GJtFrHM/EoN
1kS5KH/VUsTLVM2xE8k+oAEulHuO1HvGy7pA5GaHX0mqEe0qe1uM4ewIhB393i12dCLWkS/GIRB5
x01AkN/ee2vqM5LJsyt0tFwXK6H+Nrc+AKbCWH1IJnG94WFhuUtjJe32RTN9rpzlDpryC5kD7xIJ
opxqZYc5hAXES9EePnvKpZlrZeXub29Z9afAKf3RliP2RRRrXzaxUbcJS4aO+LY9+vq8aZ3c3bd6
uMIEmfbugt3CCPLfXXd/qr91sCQjYobK53X6Wu8uPHbBXSJ/PT43NtrGzkhB3bTUiN0YnPmCWJWZ
+7XYkiOXqLZvjEHbr/ay39AgVnbIR+9rTlNsXiDslbS8advPMiPvd0mmouMIkPCYZ9qr4nDtmxev
9CCjpgh8837yBDRKK/3vs7YaR5WXFIrlg6pdAwOeL5CxtItc7W5oCkhYJGLGvG+TSsuiFjo6Z0/O
ZNmbEmibYdwP+1u6Yej7nn+rYDO1lG/JD6oDDH53XV263kaYz7Irx89rQ3lDB78RN4jyChY8Aco6
0Og43+Ebd6waZou7u28KqnSo1v89maClCJCPHFeqCaSQ+pz3ujyyV9e43ifweUlKhx8Muao6ReGl
tGT7xWphOVN8K9/FYqJLT7GnMvY9//1TBqaOceNiTziRGMoAc5kXsTO8pJ+qDPz4iNUQy1skFwzz
LeMOqrM7M79fsu9ocIFjJjj0e8kSzvnvE08cv0lSLpm0atKVoZrvfQkPECOl7O+8Oi/XtrVRXtnW
t1t9dlcAnud3QmcwxQYiWC65MGfLLfR8V1lfJv9+8pXXEVYOH2EqmbA+38SzGpZ9dO6nKzZ2PnrY
YAz409g+Y7SPjHvT3Rf7tO5S6VxtCo8fXddjjX9nQUubFGUALf2+cV54oawW9YfVhjFWZBjqmzqF
cc6wl6kCGmeo+Pi4fgm3g65lL+yizd1HUQdloJfx9QX0Z8Nh13s2jT3beqGPHr1H3RxFfiNEhd+w
B5AnvSqBkyd24MXF3rLxmffmoteq7Q5cs3xunP0lF+WXVKsg5eAp2W3okqYCQDgW8orhRiPOmdMi
rg+G8L8yGijJU/bgCO8fW2HJH55N9nPHtNcnhjasfaBY72R9Voj2fqjReDjeleJuyp9Go7g21puC
lgWH4ZDVwQVKPzwv0MQPwxiHfvWftnOK9rV4gzEj3+nzp37emvZY8fld6c3uKDLYPZ2P4nVSdtf+
PqHO9xXOnuYHQiYsmCm3CsOZ4MLMjLVwi5KoN5eejPLj4xJCr71evyuFH+HU/MXTT7FYU4rrx0wu
dkJkohCcynCWqZz45Sq1NEYIJMLVWeGFC+xxRcRzQNuf5lHxRi8/0393fq6rR25pvEfk086x1ql+
a1JKqqCz1dhltoyHKEtC6Ic+54VCnFYRJcSydioUOp+2XTfh7zesydUVf//0k/hIEInJohJYLzx2
2Rp8QBHzhPQRVKUnDNFDam1Ji4EXWmzBHdT+ntJ3Vgu2kfvFjy01AVEtns7krakRZMm+KoGj4czH
Rof4SQV26ucLmxfM+BoBvzZV6EKBJXjR/qx7hSyZUEVaCzMWzA09sgfXAiTRf5/LRDywspc6SauN
ep2ep9tOIKLeWaUNBcvxSeb0k9II27IeP4mD4WBSEJ887PS3Sj3wTgAHhiakBFHfVy2BY/U6R+DE
aUlZStMjM01R5HySJpvV2Rrta/1GEqeujNRXIDhs6Nphdpladch/nGNjbqZoU15AQ1f5+yfdjaSD
q2taSWLu8NaEaXqo/z2OKISD61pv8i6Pr5e3Bfw6Anlw9fgWeAGNpLKvXz7D3amBRWLqFP5OViIJ
lcq+vS4OfH+6MpWauHkFwxAwEa3UzhFOtDurfZBMDkmPjuqmKfQjzSVAEH4LL/prRzKjf8b2eDPg
Vw44PBlibynpKGkkevrS5rZf1Y1UNAmX/s83FijriA8vgauA+tJQylrTxavxuk/nEoMQIstDvSP9
8tvXwbsWeVe6nU4q5PCFqYqDEyQrf8GRyDyk6A2C7n+QxalCNZQbsz2Wih0NLS4zuQ+8B1N0pMYf
UQb+/pHJGNvJ8+nvOe2GC07sk9LU8unX4I0vqxdFJrX5F2d7ZSTj1ww1b6LISPM7tniit/lm04Ot
S+98ksp/3z+tBz5fEvHZOqq3rDTIIwR1WJ0o0kzPrPZrPPdYfEQ4OwQm+SraBpB485Or0PrCNSc8
1Lx+3GFGof/uWx4Dhe7ML+7DJx4HpG+sNK5axCAqA2zxip5AR5mbcaDmdsutTZRdQGdGrOx5y3hS
viH2uP98cO/yX37jgChXFm4Mh3T46ifkhij20e85imhV0hIsWNrYElBRzIj4O7FrQV/fRTJVlXa3
JwYXaALNypk97+v/99muIkBqGjF01R8FbgLsG4x34ah6d26slZUrflSL2w9Hr5TE7NNdz1SkisHQ
qq7d9H48lz0TWkhkPf1/N/UWO88z4Zbo/Je+e+i5B2aSuo8Uxxgzw8zMzL769rvPpAdRpCixqh5Y
4FSV65dPSW2yTZoISRwpbMMI/d0BZ+9S7a8jinTIpTA0pSA9Ctk3GaUHj4lgQu18WdM7IbXNn4lf
quJbtLtvZ234OD1mhgnWR8P/jC1LovT2Va422NUO3XwvTGtR+V2LQNnukjv3zEyKs57Sm9p10NMh
jDDW40r0erVldqDKmqTbJwl44BXHROZhBTKiKSo0mZhUo7BbiAMIO2AwohxzS0/AicOBzmhva9iP
toskLqd0p+Jh//7rFzwstL8dBT3Dug3xGj8iJT10+ubDYWkcB1RX7sKH/vEI1DzT06xLlLSTfuH1
+8wmB5omnd51Z2dff+oI873IbU0pt7aOdulVhdbxBtq+tkg942ShGKxbxzMriVvPeCyCYwex0J2g
4nuqaXLJ8FyZpiD3tuPvLgEvTsMLAsKqutjnC0dOoG6FNAWIN0NK9dQ/nrQRD3usc4zfihYNbOdt
obGGo0JvMMicTNnfflH+4ub/jH6YqqP5XI0V/bI2PgDOXfULSFSrVwq51B6TMIdV5hISZ6EJfmUJ
VDeRL33mDXRYyHFk0ASu3+/lBb/Gaar+5tnR+cLTppnHYpTPQKc4PzPjkTArHVgP7wjPHmpVlyxt
w87SmMMSb0F0OY1GjyPCXfhqKC/LsIUoNiqoCKmY3MVqw/HkS0sMB8QlJ4+nLLyTWMLEIcClufJD
hnmwOtstBAJMBvFbBy4wvsphm8L533/W8jt9mF4pVTcbzG62qPI5gHrl7sNGEM1ahRKdVx93X2lb
N4HHMILil2iTMEdYhMSmolqgN/OJ0uflrD0RThXYK1fngrhO0Y6E3t63TVdfLNRyltGVVh6TdT9W
IpLvX7CABgaDHJEbfuFduSkU/kr1OFWZDP7WW+7fLKotCMP0P0VSNfxrtwcjXSDAI5saU88iqpek
JXJnS2ureswjOwwqHZndEjW/rKvUfZD0xITXfbT2i7caXs0rnmjAJ5N+JCwL1hLoym908BV+YMSA
msGxgOP8TRJWwWJHVvut+BtAv9eI82TRGhjm7f7ffzC8OUJsEvDHi0PEap4bEhrXVjNJQXT3Os81
Gi9dMZGnWRAGMrZTP2cvTg6nnU0kHqeg//4KX61z5/sy4CsP4Nj6CoaTLBIDkKhcaBdbJ74W7r6a
DkS0XTmjpJkhVbU8VR28A9vQb7z8Zghc6+W4XCddRdd6ecEzYtFjmiVRphHCkWG7jAF4ctxPH4JX
Ymj79g7biJOsVN7i6YqUlote/JpTx7ygRtWQsDNeidoUvf68jIig+6mwpnOUmi9f8fN3X9NkZ7mQ
M8HOx9iFBbOivXEzOmoRHCulJwuF12RSWeD5QWJ7ul0dCS2AvjnV9sMduQlvBepVs+sc3zGcSCYi
mKmfP2hCbqVsFXbomPXG6ACPbfSj1kmIgO3EES42k+mjJUIt/Lm29MOsBComKzv/YphMOPsGUj9b
ftii5j916RyOJhMcvCFYd49mLNc15eJ9oHL8c6IVbaiX5MfQV6mb5PULmL+NNLE/DdzwMv11KdLu
8ku3zEuwpECYVHMnU7qpvO7ztdte/X6qrNHh3iXujxv65CijLO8pLM3G//6bon5gZceXBtMhcFUg
idxb4pstFyIlMOgNS3oOUkVYyFM5lX0SYqi8XMvO/ZEYKbCywAxorBp00PGOjf/pEdnVN4FAxqsd
0TgGzC+kZrWmIYm4iSV+RlAwOTcoEWv4/Qx3BU/QURxg0MT9byl4mAFLDLbOQnj5NGGuUwbRH32n
ClBwoyRaBhtDi50gqRg9c6o9nigqnTv6FrK1w3W/MrXLdQ1ycQAsmv5MBI2QxTp4EQnfa03lsPXk
rWa3BAAeD/b5ztTj9QoLzp+PVQFweT4GQPljL684WW74it678LvNILmv4CNgtJ61K/D6rI8ZIomU
HIzpQgWb2L56//wuyOBP+BjrU4+OyCC6MBd315qLfLLsJIRCeMhW9SEUCMtAubyDFqnAn//vP6Ey
pyZInsNzPLcVuKyXWLttmQxQyJBoBnXzmkXw5gToujVuo8K+4sYKSirgj1n4+k4NXKE4IjsB/O2v
f136nlKLLN7tPFpK8oEzygs3lFFZfMY+TDVBDJ8oEav8vCOqDQGvAsWlysYVYnHHxr7gZodQSqR9
u579scZvQ0HfKc9pbrddx0c3WFq3FkU/q5/mq7NepDaimfvi2ZpmEGucUcxdpA6Yxm4Vsntz5Ikv
tb71ltzEY017oQyefzZdp3uRUZONqRx7g3Zmq1Ioh27djvykONlNy9ipbsywnR78U2OcBmnkF6TL
Dqi1F0Mce4zh14AIdV4RZybWXbbn5nhg3TSaX66Tsey5FtTx86+RcMmyLcd5XYdw6RL0G4vKH5Em
RRylvvDz338x0d4IFeiXopXRuSCJ4DGk6tchbeWK+E3DwBBb6Xuft7p9jJ2HBWvfqcZxxQCj2Gug
Hx9PKzsNbvvtepvBXLjqJVA7wd72mJh6ZeylqwSHCVB86fHX9oHd2X96vr/6jS7SywL0IGzgwh1+
N9tYtgAL3q3+lPLFEH7iifhSFfytQItOUTy9v50j2rdxwXPDan/nmkCl3kgo13H9KgrzSyTbtFof
Y5mT5fpU5/uTvOmGt3oHiIPcohtVhzau9od/1p1BtYTLxXv00IjTMyTI48QyXzGsmfoXOWpyETA/
YnkTyBI5vhh73Od1g53XOz/1pIQi9GZh8Y3v5W979yQhLb1YqQKF7TIgd09cECK90N4jcn9wDbiE
rh5NCfDOhrHdrF36R5C7Qfz3H+hKOMTlwodmYNSZP3tevyyku/Ub7NjpAq/RXoiFmGdyigPvRTQu
43nfz9ur+7HO7W88qOnMl9lt7f/+cy1y+CK3gYIi82rTgLlb0uuauouzWQ4MmFFHxr9tPzfFlVXK
meadTZSbNA9oE75dk7luMgIWezxl499/Bu194ZG5XsMzKkw+/dYGUQxboG5rnWrjKLRRrrbUqJEQ
2sZkbtWcCpI83yxUu+7ss7mH5vChU8Ol+HeSAOe5ohDdKNNdKcGLNbVJtfXB2nOJ95nFVCmDINMZ
PuIIJOL6/Lr1cr7PtO0iCkA8DOGvlhzKXPnLAsUKNOmBlOciODuVcbX1EHcweup5G+4rzZLD+Tzx
3ltIdDxzTD4izwoorY5ot7AqPrR2pTbBGsAJz4shekab1rAL3ByRG5wKNo6nyKhnq2S7Ygf3hmg3
LaEdv1aMNiW4I7yvKqX/sD3PIagQ3n0VCo7bHH31YgjFe6v1Cz6bY4rSkVV9fnD+62UzJnmdYnSV
M3oiN6CGlxTyh89nd4nl2lh87NuHSpoelDYTQymihLeziEUj9P684dz8+6vkDrzeS/S1vaBOiRAM
uxJo6hqB5Oy0lz6xy0d0k03B9a31XHRANRt2Bx5RuNT+Tve6Xqb4idFK21Gk7o3GGJTbiJJonKh0
bMppNClRojbX5phuYBSCp/4lexTcCT/jwvx2m+qgi6qUEf723F1UoWIy+4Gn+4aOyVMK/UUylCok
l0fY8XZw+RkUDcPADZB1ZA4fwYBiLveaYCsDVoW/tQwe/lEAv/VVg8shUuQ7QHBl7oe+QK9ZS0SD
d5AJQVwgd4ApDmTYVXe5URDXwIJoQHA3yCPXPXpqO/j8bn0FAmQxvti7HiUE5z1l5GiBFXyaZCrV
olZnRAAGJwxkz/LiVRRwzK86Bbxgsn6dZZteTUpYsj3gVXJAXBx+y79cDxbJUSE4aBgOOQIHxhDO
cL1fjPYgp0O1WInh3BuhqgaI3lhzQlWULMG6II8QTAvni9Hro5woRbTZ62XQIWf1X+atxiGe5AFy
AkfiDtgDCOFYIkv9/2ckgv9zRuLPep6DqEBOg8ADBEtnO+bs8wCdmQ/EXr1dX4BANZDXho0Au8Je
axbYkTzWzYB4abM/Wq6ZEV9SEVt3sVmbojiqa92gFEt0MHVdHferBDyiDyUc79UccykOR8roFqGw
FRCpwznJCzqCNGisXcoS6q5AmderBSZnSWHq6Xd86vo4Up5uKGAJD2DPdCOoExh8/Wmd7zzygFQz
5NkCnxfydTw9CKaqT+ddkd19w/IGLRvArhmEb07xsrRP2f4dapExvjbdOhk8s/DO/M0pnWC9WGQS
cXkWOReCUuo7okPV8c4eUuCVWb5oiP9EkjRIOcfPVCce/HkwEXU2JpuowJ4dw9iTH/N3T7XSa5H1
D1712HvlGLaVtIbiXp/ewteVhNgbk8MoG4QCHjUZaCZS25y6coXkMvbodiG/TM0ppEDKiTen34L6
YDvuAvJhnqRIIar4UkFTxiIJYkHRAG9iPwXaJPSH1Qwtayix58AEeHBNBMmvDYqoiRZHYop/uzK5
gArijWJPLbNOPQbj9Tni4lHCIysUWytoDQRGQQDviwRcs8dRGiSZ930CBdB05TZExfjE2Em5cvtv
Re4hyfR4hOWwACPtw85M6OEtYdLhwQQ6Y8yrIDEuxJyY0mnSRFNIeHIhAJZO9geaOzdOPYCSRuv+
7QWRcv0CIyNQBr6L2J9ValIZx9mzIRhToQapfja37+Tf0wK4dAUsRUetYQsEuqha15iT/gfaFYl3
20y/SpWyMrl4rp55bVRa4Me8a8ElijjK4B36fI3lqcmTVZHiruYYkCMul3zYOzFO2c0OX4/6m3yr
x1qp5MVeiUZg/Loj74KTty+uV1DXO4dQBmK4nOy06EgjX/kFL/ADWp8fA4bZT2L6L5ACDmTQRgt9
wRPzig9fy2/X18vnmLKjqOgyIRfi534yk2NoGThQKf4CJbgZGM0tTRm+aR2DHR3cMP1q10HjBEg+
seEE44+jPc+33qsBwYeQ+X2Sv8S0tOBtVwDBSztG2AR7NZUkyWJH1xtC+NhR29JQ8G01ALSkkO3j
FW0bsretoF0dYH8n86AZwajNxyQnoJD8M3jYKXniV43Nzo7DAY6gZ2QoBYUaxTPIAK5fSZ+SYLwE
VX0nRVZvPHgW7uQW0Du2Cqdz35EDghoykvjQuqV4BoTKadtgQTpddO7whSEvLtYRIKbNuDz+KJAm
Frn9/sDxM/XjVyTD7+S8WSiwUwAI4FWkFQm/AMcdF+o11nGSK0m5H5v/DHSX5OlsAm1xmMMkV9iG
yl1I/qIfJz4dRFGXGKLlhHr//lsV/ZgaG/VexkBt8lRrfiqYL9F+yh3hCY+oBkFu+rTcTgOQWaih
eoCYwqOcoEAUuAczxgretsGXaf7ff6ZIPw3jr69YJOzoWVFfGexwgyQEXpSr+1vLf/sx7cLZvsXk
jurKpqyBFQBXkz1//zRR9yaC/aj46/C3umlvogIFMv1PHsonQwroxvsNTCUnsl5R2227miFHjmmY
dIN6jGjHnh7a7fXRpADPA19CttMbGEP4q2q+QaKKu8IBF0lebJ1ncOHpR1can6Q0XQH80ON3AUL2
uIG9CPrPs4VrtnZ24IDymb3hMxwNWcF0WV799kgSnwfbjtuY2GdFEXyTaD8iFBeC7+oe4UV5mVoX
mdpisfX4Dv+zZfXrk2Jqm8qaJEpaa4sa5vAb9H//wdfPQObkQXv5bH9Nk7ft5ewLKvq75dTIMHht
vCbhR3PUlOaCkSpi9mhUh+oEF8wgxAduBDkhBrDjFy3hNsm7/mC5TAzC1YNJm9BiRU64Di/kNBYk
gt9UPWWGr9EbL1TRTBcq9QLStvIFO9cE/EABsNge8fLz4tvG0F21gUrKGKGBO5X0yQYxxkWlMd2f
d7ecdcGxoHr9XfbN3f/t9cNBGiaN96VlECvcjqxR/BD/pr91+PHD2hGTy4BsFL7UWj3hPwFYogtd
CWVEbDsCkS1YfmBzTuQZ0cDoPJSRnEEZDDkQMNMLdwfowyBv9YIdpCQK2Jp9a6aRtDgAXijKQAQp
QNXPkQMDBWIHdZEjSHDeUovYfn/ltUif9Cioq4qZBgBHA7AA6kVL0uibuqx5uJwQgHhljAV2vPMC
yKuXFIFageHMKef8oqXWD0mU6HKzwMnK/sao2gdIXm69ZE+9107xxRA/NjUgC3jpYGWTZmmWf0cH
BLRBvqJTAAvJYBUB4yZqgby7oa50wS0g9WDwOMjdXYxWL4WTfpzHMt647Y5KgAgdvpFN+HMF2rg1
hrCrOjAuye4Qj35l7zR/qWYlgI1Glh6ZXPsrgeviFuNHVu2YZOG4e1iy/fefZcPaXuzIZcmr+1u5
b1dlIEqQZfZIrGga6k8eHWS2UiEhUmWZbsRshXgiVG5PzLDspsd07lR0k/r3MiBoonKkvBAikfn+
WRCaGZKVFGe5UEnW0pASDyDBW4IWW2a6/CCwNZ+3S+oQni1hp60vY70Ai6LN2ffvTIOyWbUX7S4R
vwdkGbszItzvb9LRTHPrYdygKtUnMlHDViAZGTm5Zf6ah0X0LnUnt/T5+E59I7rqvlmYFOyKaWHh
nHabX8G3maD+fCh1L0yJxN3JEG+YeGBMDckKLW6tRZiopTS/QZaur809MG3lgSPww/NvLxDopbvh
mE49WxVsuvOYyvIf/Nj2XpKTgFlAZKmhV3COWr0qkHfp4W4JUZCtlQTNhpfESOdcPz0tPsXf2BTd
23zW48uZoHmml2bfGyHJP4L2wzaMSaSBf91OqqrySIooyfmWRq2F/uA/6s7cjtBLepz3hk28v11L
v1tFf38mY2YO1rXUvKuLIGYE+hpATtdoYhLyLr2zrXZMlzBUYuAtSHsmHQYdlgNyayvJM2PIv1WI
UHkdU6JXZPFDeBKK0EkC2yVVviWDbarj3WkasbKKMi+ioQEphj7RcIiC/KKQQdRueCzhwjoJDxLx
VYOmkFLNLyQeCZQRB7IsnL2EaFRUeDFy0coPYTgxnM9gtDaiHcut+UIaPP4lPkuEiYqLxhR/cKRP
tu7letFeCKk+L9Y0Pf9XEHu5Jgh8ZUyWddLWZ6cIAwwI2uqKtwtPJ0KRXEvEZz7AO7lFnRPM1Mg1
NVGmfP/9lykFvc7hy0dd88VVAdoTStvOCwUbenmxCLNsR5IkQslSheSn6qEpa+fPhTc5R3kFPy8R
CxzNxdh2r8K/Nm6IALFpfuTHpIaPCQ4lgZE6nodJTtovGwlKsNzjMOf0pHqB4zQxK5BLMUWPqIaU
nSoYAvb4i3SvUh0eY8icLhmWwZ7fLg8SN+eRCScq0pwQcI8Zt89tfGMdUOsTq5dYpZ0+qPIAFXDu
SRJWAtXMhg21+cuAQQlP56ZzwSoSfpUusb1tG+4KW+nu2m+vSzT/SsHmBp42rYd3dVwyNOHnmU9C
YpjAjt1R6xr0Eh+vfsdmr9QYktuSOHyIIeFkf/1q/EkPGSzbqIz+ouVBzdHj9nVroQ4D4Dg1eiK2
BWIj7h5m20Cd6gaZSnwZsPzF36Z8tMgugpo/Au41NKZ0qG6/pRqqvUQ2rPuHnNZZyNlaYHgmQPDB
k8qHnNQPHlRIKZ6CS1zqz31nihUI+NrMkmAMM/mGQC+SQOmgdnGdQ0GnJp6aydklWEjQVWEgeDGb
7PIz0E9aAcXbSGuWBgNJh2/U//2XGwjLU2DV2AQIygrBHL3gdBfFzyYfre4wDcT3Q9zcJRhiktyZ
Z9V8GPXdhiZLcDHIdui9fKE2oTRv9dLL+DVwVruPBdZ74j7CGGMR+4a6GG627a8lgNK9RCIne7/6
YhgLgFLs+E1SyQngk/rn3v2eij85nr4so3SsgxLqGFEQsq9YT6rT74qNJVNLtRfsJM0QAgYbAqQg
KV2p/3mKwef//J//Df7Pww3+5zEHn3XN+6Sr8/V/ge8n/xv8fx+m8P/9X3pUbQNbYQAA#>
#endregion
	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$formWindowsUpdaterToolFo = New-Object 'System.Windows.Forms.Form'
	$splitter1 = New-Object 'System.Windows.Forms.Splitter'
	$labelCredits = New-Object 'System.Windows.Forms.Label'
	$linklabelForMoreInfoClickHere = New-Object 'System.Windows.Forms.LinkLabel'
	$label2 = New-Object 'System.Windows.Forms.Label'
	$label1 = New-Object 'System.Windows.Forms.Label'
	$groupbox2 = New-Object 'System.Windows.Forms.GroupBox'
	$labelSelectWindows10Versi = New-Object 'System.Windows.Forms.Label'
	$OSVersion = New-Object 'System.Windows.Forms.ComboBox'
	$buttonGetUpdates = New-Object 'System.Windows.Forms.Button'
	$Download = New-Object 'System.Windows.Forms.Button'
	$statusbar1 = New-Object 'System.Windows.Forms.StatusBar'
	$datagridview1 = New-Object 'System.Windows.Forms.DataGridView'
	$groupbox1 = New-Object 'System.Windows.Forms.GroupBox'
	$button1 = New-Object 'System.Windows.Forms.Button'
	$groupbox3 = New-Object 'System.Windows.Forms.GroupBox'
	$checkboxDependency = New-Object 'System.Windows.Forms.CheckBox'
	$radiobuttonForceRestartCustom = New-Object 'System.Windows.Forms.RadioButton'
	$labelAppOptions = New-Object 'System.Windows.Forms.Label'
	$radiobuttonUserDeferredRestart = New-Object 'System.Windows.Forms.RadioButton'
	$radiobuttonForceRestart = New-Object 'System.Windows.Forms.RadioButton'
	$radiobuttonDoNotRestart = New-Object 'System.Windows.Forms.RadioButton'
	$labelWorkspaceONEInfo = New-Object 'System.Windows.Forms.Label'
	$buttonSaveToWS1 = New-Object 'System.Windows.Forms.Button'
	$textboxGroupID = New-Object 'System.Windows.Forms.TextBox'
	$labelGroupID = New-Object 'System.Windows.Forms.Label'
	$Connect = New-Object 'System.Windows.Forms.Button'
	$textboxServer = New-Object 'System.Windows.Forms.TextBox'
	$labelServer = New-Object 'System.Windows.Forms.Label'
	$textboxAPI = New-Object 'System.Windows.Forms.TextBox'
	$labelAPIKey = New-Object 'System.Windows.Forms.Label'
	$textboxUsername = New-Object 'System.Windows.Forms.TextBox'
	$labelUsername = New-Object 'System.Windows.Forms.Label'
	$textboxPassword = New-Object 'System.Windows.Forms.TextBox'
	$labelPassword = New-Object 'System.Windows.Forms.Label'
	$tooltipConnect = New-Object 'System.Windows.Forms.ToolTip'
	$tooltipDependencyApp = New-Object 'System.Windows.Forms.ToolTip'
	$tooltipForceRestart = New-Object 'System.Windows.Forms.ToolTip'
	$tooltipDoNotRestart = New-Object 'System.Windows.Forms.ToolTip'
	$tooltipUserDeferredRestart = New-Object 'System.Windows.Forms.ToolTip'
	$notifyicon1 = New-Object 'System.Windows.Forms.NotifyIcon'
	$tooltipCustomRestart = New-Object 'System.Windows.Forms.ToolTip'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	$CheckKB_URL = "https://raw.githubusercontent.com/brookspeppin/WorkspaceONE/master/Windows%20Updater%20Tool%20For%20Workspace%20ONE/Supporting%20Scripts/Check-KB.ps1"
	$InstallUpdate_URL = "https://raw.githubusercontent.com/brookspeppin/WorkspaceONE/master/Windows%20Updater%20Tool%20For%20Workspace%20ONE/Supporting%20Scripts/Install-Update.ps1"
	$Catalog_URL = "https://raw.githubusercontent.com/OSDeploy/OSDSUS/master/Catalogs/Windows%2010%201903%20and%20Later.xml"
	$Catalog_URL_1809 = "https://raw.githubusercontent.com/OSDeploy/OSDSUS/master/Catalogs/Windows%2010.xml"
	$tooltipConnect.SetToolTip($Connect, "Click to verify your crendentials can connect to Workspace ONE.")
	$tooltipDependencyApp.SetToolTip($checkboxDependency, "Use this if you'd like to sequence certain installs together.`n"`
		+ "i.e. Installing servicing stack update before the cumulative update.")
	$tooltipForceRestart.SetToolTip($radiobuttonForceRestart, "After the update installs, it will force a reboot and give a 5 min timer to the end user.")
	$tooltipDoNotRestart.SetToolTip($radiobuttonDoNotRestart, "After the update installs, no reboot will be forced.")
	$tooltipUserDeferredRestart.SetToolTip($radiobuttonUserDeferredRestart, "This will prompt the user with a toast notification that a restart is required.
They can 'Restart Now' or defer. You can set the amount of days anywhere between 0-7 before the system will force the reboot.
Don't set it to 0 as this acts the same as the 'Force Reboot' option and is not a great user experience.")
	
	$tooltipCustomRestart.SetToolTip($radiobuttonForceRestartCustom, "This will set the restart to be whatever value is defined for 'Installer Deferral Interval '
on the assignment when you enable 'Allow User Install Deferral'. So if you set this value
to be 2 hours, the update will install and then restart automatially after 2 hours.
Note that this doesn't allow the user to defer the install, it just uses the value and allows
for different restart windows per assignment. Set the 'Deferral Exit Code to 0'.")
	$label1.Text = "Welcome! How to Start:`n1. Select your Windows 10 version from the dropdown.
2. Click Get Updates. Select the update you need.
3. Click Download. 
4. Enter WS1 REST API credentials and click Validate Creds.
5. Configure App Settings and when ready, click Save to WS1."
	$label2.Text = "by Brooks Peppin | Version 1.1 | Apr 27, 2021"
	
	$formWindowsUpdaterToolFo_Load={
		#TODO: Initialize Form Controls here
		$buttonGetUpdates.Enabled = $false
		$Download.Enabled = $false
		$buttonSaveToWS1.Enabled = $false
		$textboxServer.Text = "https://asXXXX.awmdm.com"
		#$TextBoxrestartWindow.Enabled = $false
		#$labelMinutes.Visible = $false
		Write-Status "Select and Windows 10 version and click 'Get Updates' to begin"
	}
	
	
	$exitToolStripMenuItem_Click={
		#TODO: Place custom script here
		$formWindowsUpdaterToolFo.Close()
	}
	
	$aboutToolStripMenuItem_Click={
		#TODO: Place custom script here
		[System.Windows.Forms.MessageBox]::Show("Menu Application v1.0","Menu Application");
	}
	
	
	
	#region Control Helper Functions
	function Show-NotifyIcon
	{
	<#
		.SYNOPSIS
			Displays a NotifyIcon's balloon tip message in the taskbar's notification area.
		
		.DESCRIPTION
			Displays a NotifyIcon's a balloon tip message in the taskbar's notification area.
			
		.PARAMETER NotifyIcon
	     	The NotifyIcon control that will be displayed.
		
		.PARAMETER BalloonTipText
	     	Sets the text to display in the balloon tip.
		
		.PARAMETER BalloonTipTitle
			Sets the Title to display in the balloon tip.
		
		.PARAMETER BalloonTipIcon	
			The icon to display in the ballon tip.
		
		.PARAMETER Timeout	
			The time the ToolTip Balloon will remain visible in milliseconds. 
			Default: 0 - Uses windows default.
	#>
		 param(
		  [Parameter(Mandatory = $true, Position = 0)]
		  [ValidateNotNull()]
		  [System.Windows.Forms.NotifyIcon]$NotifyIcon,
		  [Parameter(Mandatory = $true, Position = 1)]
		  [ValidateNotNullOrEmpty()]
		  [String]$BalloonTipText,
		  [Parameter(Position = 2)]
		  [String]$BalloonTipTitle = '',
		  [Parameter(Position = 3)]
		  [System.Windows.Forms.ToolTipIcon]$BalloonTipIcon = 'None',
		  [Parameter(Position = 4)]
		  [int]$Timeout = 0
	 	)
		
		if($null -eq $NotifyIcon.Icon)
		{
			#Set a Default Icon otherwise the balloon will not show
			$NotifyIcon.Icon = [System.Drawing.Icon]::ExtractAssociatedIcon([System.Windows.Forms.Application]::ExecutablePath)
		}
		
		$NotifyIcon.ShowBalloonTip($Timeout, $BalloonTipTitle, $BalloonTipText, $BalloonTipIcon)
	}
	
	
	
	function Update-DataGridView
	{
		<#
		.SYNOPSIS
			This functions helps you load items into a DataGridView.
	
		.DESCRIPTION
			Use this function to dynamically load items into the DataGridView control.
	
		.PARAMETER  DataGridView
			The DataGridView control you want to add items to.
	
		.PARAMETER  Item
			The object or objects you wish to load into the DataGridView's items collection.
		
		.PARAMETER  DataMember
			Sets the name of the list or table in the data source for which the DataGridView is displaying data.
	
		.PARAMETER AutoSizeColumns
		    Resizes DataGridView control's columns after loading the items.
		#>
		Param (
			[ValidateNotNull()]
			[Parameter(Mandatory=$true)]
			[System.Windows.Forms.DataGridView]$DataGridView,
			[ValidateNotNull()]
			[Parameter(Mandatory=$true)]
			$Item,
		    [Parameter(Mandatory=$false)]
			[string]$DataMember,
			[System.Windows.Forms.DataGridViewAutoSizeColumnsMode]$AutoSizeColumns = 'None'
		)
		$DataGridView.SuspendLayout()
		$DataGridView.DataMember = $DataMember
		
		if ($null -eq $Item)
		{
			$DataGridView.DataSource = $null
		}
		elseif ($Item -is [System.Data.DataSet] -and $Item.Tables.Count -gt 0)
		{
			$DataGridView.DataSource = $Item.Tables[0]
		}
		elseif ($Item -is [System.ComponentModel.IListSource]`
		-or $Item -is [System.ComponentModel.IBindingList] -or $Item -is [System.ComponentModel.IBindingListView] )
		{
			$DataGridView.DataSource = $Item
		}
		else
		{
			$array = New-Object System.Collections.ArrayList
			
			if ($Item -is [System.Collections.IList])
			{
				$array.AddRange($Item)
			}
			else
			{
				$array.Add($Item)
			}
			$DataGridView.DataSource = $array
		}
		
		if ($AutoSizeColumns -ne 'None')
		{
			$DataGridView.AutoResizeColumns($AutoSizeColumns)
		}
		
		$DataGridView.ResumeLayout()
	}
	
	function ConvertTo-DataTable
	{
		<#
			.SYNOPSIS
				Converts objects into a DataTable.
		
			.DESCRIPTION
				Converts objects into a DataTable, which are used for DataBinding.
		
			.PARAMETER  InputObject
				The input to convert into a DataTable.
		
			.PARAMETER  Table
				The DataTable you wish to load the input into.
		
			.PARAMETER RetainColumns
				This switch tells the function to keep the DataTable's existing columns.
			
			.PARAMETER FilterWMIProperties
				This switch removes WMI properties that start with an underline.
		
			.EXAMPLE
				$DataTable = ConvertTo-DataTable -InputObject (Get-Process)
		#>
		[OutputType([System.Data.DataTable])]
		param(
		$InputObject, 
		[ValidateNotNull()]
		[System.Data.DataTable]$Table,
		[switch]$RetainColumns,
		[switch]$FilterWMIProperties)
		
		if($null -eq $Table)
		{
			$Table = New-Object System.Data.DataTable
		}
		
		if ($null -eq $InputObject)
		{
			$Table.Clear()
			return @( ,$Table)
		}
		
		if ($InputObject -is [System.Data.DataTable])
		{
			$Table = $InputObject
		}
		elseif ($InputObject -is [System.Data.DataSet] -and $InputObject.Tables.Count -gt 0)
		{
			$Table = $InputObject.Tables[0]
		}
		else
		{
			if (-not $RetainColumns -or $Table.Columns.Count -eq 0)
			{
				#Clear out the Table Contents
				$Table.Clear()
				
				if ($null -eq $InputObject) { return } #Empty Data
				
				$object = $null
				#find the first non null value
				foreach ($item in $InputObject)
				{
					if ($null -ne $item)
					{
						$object = $item
						break
					}
				}
				
				if ($null -eq $object) { return } #All null then empty
				
				#Get all the properties in order to create the columns
				foreach ($prop in $object.PSObject.Get_Properties())
				{
					if (-not $FilterWMIProperties -or -not $prop.Name.StartsWith('__')) #filter out WMI properties
					{
						#Get the type from the Definition string
						$type = $null
						
						if ($null -ne $prop.Value)
						{
							try { $type = $prop.Value.GetType() }
							catch { Out-Null }
						}
						
						if ($null -ne $type) # -and [System.Type]::GetTypeCode($type) -ne 'Object')
						{
							[void]$table.Columns.Add($prop.Name, $type)
						}
						else #Type info not found
						{
							[void]$table.Columns.Add($prop.Name)
						}
					}
				}
				
				if ($object -is [System.Data.DataRow])
				{
					foreach ($item in $InputObject)
					{
						$Table.Rows.Add($item)
					}
					return @( ,$Table)
				}
			}
			else
			{
				$Table.Rows.Clear()
			}
			
			foreach ($item in $InputObject)
			{
				$row = $table.NewRow()
				
				if ($item)
				{
					foreach ($prop in $item.PSObject.Get_Properties())
					{
						if ($table.Columns.Contains($prop.Name))
						{
							$row.Item($prop.Name) = $prop.Value
						}
					}
				}
				[void]$table.Rows.Add($row)
			}
		}
		
		return @(,$Table)
	}
	
	function Update-ComboBox
	{
	<#
		.SYNOPSIS
			This functions helps you load items into a ComboBox.
		
		.DESCRIPTION
			Use this function to dynamically load items into the ComboBox control.
		
		.PARAMETER ComboBox
			The ComboBox control you want to add items to.
		
		.PARAMETER Items
			The object or objects you wish to load into the ComboBox's Items collection.
		
		.PARAMETER DisplayMember
			Indicates the property to display for the items in this control.
			
		.PARAMETER ValueMember
			Indicates the property to use for the value of the control.
		
		.PARAMETER Append
			Adds the item(s) to the ComboBox without clearing the Items collection.
		
		.EXAMPLE
			Update-ComboBox $combobox1 "Red", "White", "Blue"
		
		.EXAMPLE
			Update-ComboBox $combobox1 "Red" -Append
			Update-ComboBox $combobox1 "White" -Append
			Update-ComboBox $combobox1 "Blue" -Append
		
		.EXAMPLE
			Update-ComboBox $combobox1 (Get-Process) "ProcessName"
		
		.NOTES
			Additional information about the function.
	#>
		
		param
		(
			[Parameter(Mandatory = $true)]
			[ValidateNotNull()]
			[System.Windows.Forms.ComboBox]
			$ComboBox,
			[Parameter(Mandatory = $true)]
			[ValidateNotNull()]
			$Items,
			[Parameter(Mandatory = $false)]
			[string]$DisplayMember,
			[Parameter(Mandatory = $false)]
			[string]$ValueMember,
			[switch]
			$Append
		)
		
		if (-not $Append)
		{
			$ComboBox.Items.Clear()
		}
		
		if ($Items -is [Object[]])
		{
			$ComboBox.Items.AddRange($Items)
		}
		elseif ($Items -is [System.Collections.IEnumerable])
		{
			$ComboBox.BeginUpdate()
			foreach ($obj in $Items)
			{
				$ComboBox.Items.Add($obj)
			}
			$ComboBox.EndUpdate()
		}
		else
		{
			$ComboBox.Items.Add($Items)
		}
		
		$ComboBox.DisplayMember = $DisplayMember
		$ComboBox.ValueMember = $ValueMember
	}
	#endregion
	
	
	
	$buttonGetUpdates_Click = {
		
		#TODO: Place custom script here
		# https://github.com/OSDeploy/OSDSUS/tree/master/Catalogs
		If ($global:OSVersion -eq "1809")
		{
			
			Invoke-WebRequest -Uri $Catalog_URL_1809 -OutFile $env:temp\catalog.xml
		}
		else
		{
			Invoke-WebRequest -Uri $Catalog_URL -OutFile $env:temp\catalog.xml
		}
	
		$xml = Import-Clixml $env:temp\catalog.xml
		$UpdateList = $xml | Where-Object { ($_.UpdateBuild -like $global:OSVersion) -and ($_.UpdateArch -Like "x64") } | select KBNumber, Title, AdditionalInformationUrls, OriginUri, FileName | Sort-Object Title
		Update-DataGridView -DataGridView $datagridview1 -Item $UpdateList -AutoSizeColumns AllCells
		$Download.Enabled = $true
	}
	
	$datagrid1_Navigate=[System.Windows.Forms.NavigateEventHandler]{
	#Event Argument: $_ = [System.Windows.Forms.NavigateEventArgs]
		#TODO: Place custom script here
		
	}
	
	$datagridview1_CellContentClick=[System.Windows.Forms.DataGridViewCellEventHandler]{
	#Event Argument: $_ = [System.Windows.Forms.DataGridViewCellEventArgs]
		#TODO: Place custom script here
	<#	$datagridview1.SelectedRows |
		ForEach-Object{
			Write-Host $_.Cells[2].Value
		}#>
	}
	
	$OSVersion_SelectedIndexChanged={
		#TODO: Place custom script here
		
		
		
		
		switch ($OSVersion.Text)
		{
			"20H2 x64" {
				$global:OSVersion = "2009"
			}
			"2004 x64" {
				$global:OSVersion = "2004"
			}
			"1909 x64" {
				$global:OSVersion = "1909"
			}
			"1903 x64" {
				$global:OSVersion = "1903"
			}
			"1809 x64" {
				$global:OSVersion = "1809"
			}
			default {
				#<code>
			}
		}
	
		$buttonGetUpdates.Enabled = $true
	
	}
	
	$Download_Click= {
		#TODO: Place custom script here
		$row = $datagridview1.SelectedRows
		
		
		$datagridview1.SelectedRows |
		ForEach-Object{
			$AdditionalInformationUrls = $_.Cells['AdditionalInformationUrls'].Value.trim('{}')
			$KB = $_.Cells['KBNumber'].Value
			$title = $_.Cells['Title'].Value
			$url = $_.Cells['OriginURI'].Value
			$filename = $_.Cells['Filename'].Value
		}
		Write-Status "Downloading $title"
		$rootpath = "$env:TEMP\$title"
		If (!(Test-Path $rootpath))
		{
			mkdir $rootpath
		}
		Invoke-WebRequest -Uri $url -OutFile "$rootpath\$filename"
		If (Test-Path "$rootpath\$filename")
		{
			Write-Status "Successfully downloaded."
		}
		else
		{
			Write-Status "Error downloading. Try again."
		}
		
		Invoke-WebRequest -Uri $CheckKB_URL -OutFile "$env:temp\Check-KB.ps1"
		$DetectionScriptPath = "$env:temp\Check-KB.ps1"
		Invoke-WebRequest -Uri $InstallUpdate_URL -OutFile "$rootpath\Install-Update.ps1"
		
		New-Item -Path $rootpath -Name "Empty.msi" -Force
	
		$filename = $filename -replace ".cab", ".zip"
		$filepath = "$env:temp\$filename"
		Write-Status "Zipping up files to $filepath"
	
		Start-Job { Compress-Archive -Path $env:temp\$using:title\* -DestinationPath $using:filepath -Force } | Receive-Job -Wait -AutoRemoveJob
		if (Test-Path $filepath)
		{
			Write-Status "Zipping done. Click 'Validate Credentials' and then 'Save to WS1' to save the app to Workspace ONE."
		}
		
	
		$script:appDetails = New-Object PSObject
		$appDetails | Add-Member -MemberType NoteProperty -Name "Title" -Value $title -Force
		$appDetails | Add-Member -MemberType NoteProperty -Name "KB" -Value $KB -Force
		$appDetails | Add-Member -MemberType NoteProperty -Name "URL" -Value $url -Force
		$appDetails | Add-Member -MemberType NoteProperty -Name "AdditionalInformationURLs" -Value $AdditionalInformationUrls -Force
		$appDetails | Add-Member -MemberType NoteProperty -Name "Filename" -Value $filename -Force
		$appDetails | Add-Member -MemberType NoteProperty -Name "Filepath" -Value $filepath -Force
		$appDetails | Add-Member -MemberType NoteProperty -Name "DetectionScriptPath" -Value $DetectionScriptPath -Force
		$appDetails | Add-Member -MemberType NoteProperty -Name "RootPath" -Value $rootpath -Force
	
	
	}
	
	function Migrate-AppsToAirWatch
	{
		
		Param (
			[Parameter(Mandatory = $True)]
			$headers,$OGID
			
		)
		
		$AWServer = $textboxServer.Text
		
		Write-Status "Uploading main files as a zip..."
		#	Start-Job { Compress-Archive -Path $env:temp\$using:title\* -DestinationPath $using:filepath -Force } | Receive-Job -Wait -AutoRemoveJob
		try
		{
			$filePath = $appDetails.filepath
			$filename = $appDetails.filename
			[string]$url = "$AWServer/api/mam/blobs/uploadblob?filename=$filename&organizationgroupid=$OGID"
			
			$blobUploadResponse = Start-Job { Invoke-RestMethod -Method Post -Uri $using:url -Headers $using:headers -InFile $using:filePath } | Wait-Job | Receive-Job
			#Receive-Job -job $blobUploadResponse -Wait -AutoRemoveJob
			Write-Host $blobUploadResponse
			
	<#		[string]$url = "$airwatchServer/api/mam/blobs/uploadblob?filename=$filename&organizationgroupid=$groupID"
			Write-Host $url
			
			Write-Verbose "File Path $filePath"
			
			$response = Invoke-RestMethod -Method Post -Uri $url -Headers $headers -InFile $filePath
			$blobUploadResponse = Upload-Blob -airwatchServer $AWServer `
											  -filename $appDetails.filename `
											  -filepath $appDetails.filepath `
											  -groupID $OGID `
											  -headers $headers#>
		}
		catch
		{
			Write-Status $blobUploadResponse
		}
		
		Write-Status "Uploading detection script..."
		try
		{
			$filePath = $appDetails.DetectionScriptPath
			$filename = "Check-kb.ps1"
			[string]$url = "$AWServer/api/mam/blobs/uploadblob?filename=$filename&organizationgroupid=$OGID"
			$blobDetectionScript = Start-Job { Invoke-RestMethod -Method Post -Uri $using:url -Headers $using:headers -InFile $using:filePath } | Wait-Job | Receive-Job
	
		}
		catch
		{
			$blobDetectionScript
		}
	
		#-filepath $appdetails.DetectionScriptPath `
	
		# Extract Blob ID and store in the properties table.
		$blobID = [string]$blobUploadResponse.Value
		$blobID2 = [string]$blobDetectionScript.Value
		$appDetails | Add-Member -MemberType NoteProperty -Name "BlobID" -Value $blobID -Force
		$appDetails | Add-Member -MemberType NoteProperty -Name "BlobID2" -Value $blobID2 -Force
		$appDetails | Add-Member -MemberType NoteProperty -Name "GroupID" -Value $OGID -Force
		
		$InstallCommand = "powershell -executionpolicy bypass -file Install-Update.ps1 -KB KB$($appdetails.KB) -CustomRestart No"
		
		if ($radiobuttonDoNotRestart.Checked -eq $true)
		{
			$DeviceRestart = "DoNotRestart"
			$InstallerRebootCode = ""
			$InstallerSuccessCode = ""
		}
		if ($radiobuttonForceRestart.Checked -eq $true)
		{
			$DeviceRestart = "ForceRestart"
			$InstallerRebootCode = "3010"
			$InstallerSuccessCode = "0"
		}
		if ($radiobuttonUserDeferredRestart.Checked -eq $true)
		{
			$DeviceRestart = "RestartIfNeeded"
			$InstallerRebootCode = "3010"
			$InstallerSuccessCode = "0"
		}
		if ($radiobuttonForceRestartCustom.Checked -eq $true)
		{
			$DeviceRestart = "DoNotRestart"
			$InstallerRebootCode = ""
			$InstallerSuccessCode = ""
			$InstallCommand = "powershell -executionpolicy bypass -file Install-Update.ps1 -KB KB$($appdetails.KB) -CustomRestart Yes"
		}
	
		$appDetails | Add-Member -MemberType NoteProperty -Name "InstallCommand" -Value $InstallCommand -Force
		$appDetails | Add-Member -MemberType NoteProperty -Name "DeviceRestart" -Value $DeviceRestart -Force
		$appDetails | Add-Member -MemberType NoteProperty -Name "InstallerRebootCode" -Value $InstallerRebootCode -Force
		$appDetails | Add-Member -MemberType NoteProperty -Name "InstallerSuccessCode" -Value $InstallerSuccessCode -Force
		if ($checkboxDependency.Checked -eq $true)
		{
			$dependency = 'true'
		}
		else
		{
			$dependency = 'false'
		}
		$appDetails | Add-Member -MemberType NoteProperty -Name "Dependency" -Value $dependency -Force
	
		#$app.BlobId = $blobID
		
		# Map App details to Json
		Write-Status "Converting app details to JSON..."
		$awJson = Map-AppDetailsJson -appdetails $appDetails
		#Invoke-RestMethod -Method Post -Uri $url -Headers $headers -Body $awjson
		#$files = Split-File -Path $path -PartSizeBytes 8MB
		#$appsize = [IO.File]::OpenRead($path).Length
		#$appsize.Close()
		#Upload-Chunk -Files $files -Appsize $appsize
		#Write-Host $awJson
		#return
		# Save App
		$awJson | Out-File c:\Temp\$($appDetails.kb).txt
		#return
		if ($appDetails.BlobId -ne $null)
		{
			Write-Status "Saving app to Workspace ONE Console"
			# Save App/Finish Upload in AirWatch
			$webReturn = Save-App -awServer $AWServer `
								  -headers $headers `
								  -appDetails $awJson
			
	
		}
		else
		{
			Write-Status -Message "Blob ID not in hashtable, unable to finish upload of  $($app.ApplicationName)"
		}
		
	
		
	}
	function Upload-Chunk
	{
		param
		(
			[Parameter(Mandatory)]
			$files,
			$Appsize
			
		)
		$count = 1
		$transactionID = ""
		foreach ($file in $files)
		{
			$ChunkData = [System.IO.File]::ReadAllBytes($file)
			$Chunksize = $ChunkData.Length
			$ChunkSequenceNumber = $count
			$url = "$awServer/api/mam/apps/internal/uploadchunk"
			$chunk = @{
				ChunkData = $ChunkData
				ChunkSequenceNumber = $ChunkSequenceNumber
				TotalApplicationSize = $Appsize
				ChunkSize = $Chunksize
				TransactionID = $transactionID
			}
			$json = $chunk | ConvertTo-Json -Depth 10
			Write-Host "Uploading Chunk $count"
			$response = Invoke-RestMethod -Method Post -Uri $url -Headers $headers -Body $json
			Write-Host $response
			
			$transactionID = $response.TranscationId
			Write-Host "Transaction ID: $transactionID"
			$count++
			#$chunkdata.close()
		}
		
	
	}
	
	function Split-File
	{
		
		param
		(
			[Parameter(Mandatory)]
			[String]$Path,
			[Int32]$PartSizeBytes = 1MB
		)
		
		try
		{
			# get the path parts to construct the individual part
			# file names:
			$fullBaseName = [IO.Path]::GetFileName($Path)
			$baseName = [IO.Path]::GetFileNameWithoutExtension($Path)
			$parentFolder = [IO.Path]::GetDirectoryName($Path)
			$extension = [IO.Path]::GetExtension($Path)
			
			# get the original file size and calculate the
			# number of required parts:
			$originalFile = New-Object System.IO.FileInfo($Path)
			$totalChunks = [int]($originalFile.Length / $PartSizeBytes) + 1
			$digitCount = [int][Math]::Log10($totalChunks) + 1
			
			# read the original file and split into chunks:
			$reader = [IO.File]::OpenRead($Path)
			$count = 0
			$buffer = New-Object Byte[] $PartSizeBytes
			$moreData = $true
			$files = @()
			# read chunks until there is no more data
			while ($moreData)
			{
				# read a chunk
				$bytesRead = $reader.Read($buffer, 0, $buffer.Length)
				# create the filename for the chunk file
				$chunkFileName = "$parentFolder\$fullBaseName.{0:D$digitCount}.part" -f $count
				Write-Host "saving to $chunkFileName..."
				$files += "$chunkFileName"
				$output = $buffer
				
				# did we read less than the expected bytes?
				if ($bytesRead -ne $buffer.Length)
				{
					# yes, so there is no more data
					$moreData = $false
					# shrink the output array to the number of bytes
					# actually read:
					$output = New-Object Byte[] $bytesRead
					[Array]::Copy($buffer, $output, $bytesRead)
				}
				# save the read bytes in a new part file
				[IO.File]::WriteAllBytes($chunkFileName, $output)
				# increment the part counter
				++$count
			}
			Write-Host $count
			# done, close reader
			$reader.Close()
		}
		catch
		{
			throw "Unable to split file ${Path}: $_"
		}
		Return $files
	}
	
	Function Save-App
	{
		Param (
			[Parameter(Mandatory = $True)]
			[String]$awServer,
			[Parameter(Mandatory = $True)]
			[hashtable]$headers,
			[Parameter(Mandatory = $True)]
			$appDetails
		)
		
		$url = "$awServer/api/v1/mam/apps/internal/begininstall"
		#$appid = "8324"
		#$myapp = Invoke-RestMethod -Method Get -Uri "$awServer/api/v1/mam/apps/internal/8663" -Headers $headers
		
		try
		{
			$response = Invoke-RestMethod -Method Post -Uri $url.ToString() -Headers $headers -Body $appDetails
			
	
	
		}
		catch
		{
			Write-Status -Message "Save app failed :: $response"
			[System.Windows.Forms.MessageBox]::Show("App Name: $response", "Failure", [System.Windows.Forms.MessageBoxButtons]::OK, [System.Windows.Forms.MessageBoxIcon]::Error)
			
		}
	
	
		If ($response.ApplicationName)
		{
			Write-Status "Success! App Name: $($response.ApplicationName)"
			if ($checkboxDependency.Checked -eq $true)
			{
				[System.Windows.Forms.MessageBox]::Show("App Name: $($response.ApplicationName)`n`nNOTE: This is a dependency app.You can view it by going to Apps & Books then adding a filter for Windows Desktop. Then change from Core Apps to Dependency Apps. Don't forget to it to your main app. ", "Success", [System.Windows.Forms.MessageBoxButtons]::OK, [System.Windows.Forms.MessageBoxIcon]::Information)
				
			}
			else
			{
				$dependency = 'false'
				if ($radiobuttonUserDeferredRestart.Checked -eq $true)
				{
					[System.Windows.Forms.MessageBox]::Show("App Name: $($response.ApplicationName)`n`nNOTE! You selected 'User Deferred Restart'. Due to API limitations, please edit the app and select a deadline greater than 0.", "Success", [System.Windows.Forms.MessageBoxButtons]::OK, [System.Windows.Forms.MessageBoxIcon]::Information)
				}
				else
				{
					[System.Windows.Forms.MessageBox]::Show("App Name: $($response.ApplicationName)", "Success", [System.Windows.Forms.MessageBoxButtons]::OK, [System.Windows.Forms.MessageBoxIcon]::Information)
					
				}
			}
			
			
		}
		
		
		Return $response
	}
	
	Function Upload-Blob
	{
		Param (
			[Parameter(Mandatory = $True)]
			[String]$airwatchServer,
			[Parameter(Mandatory = $True)]
			[String]$filename,
			[Parameter(Mandatory = $True)]
			[String]$filePath,
			[Parameter(Mandatory = $True)]
			[String]$groupID,
			[Parameter(Mandatory = $True)]
			[hashtable]$headers
		)
		
		
		[string]$url = "$airwatchServer/api/mam/blobs/uploadblob?filename=$filename&organizationgroupid=$groupID"
		Write-Host $url
		
		Write-Verbose "File Path $filePath"
		
		$response = Invoke-RestMethod -Method Post -Uri $url -Headers $headers -InFile $filePath
		
		Write-Verbose "Response 'Upload Blob' :: $response"
		
		Return $response
	}
	
	Function Create-Headers
	{
		
		Param (
			[Parameter(Mandatory = $True)]
			[string]$authString,
			[Parameter(Mandatory = $True)]
			[string]$tenantCode,
			[Parameter(Mandatory = $True)]
			[string]$acceptType,
			[Parameter(Mandatory = $True)]
			[string]$contentType
		)
		
		
		$header = @{ "Authorization" = $authString; "aw-tenant-code" = $tenantCode; "Accept" = $acceptType.ToString(); "Content-Type" = $contentType.ToString() }
		
		Return $header
	}
	
	Function Create-BasicAuthHeader
	{
		
		Param (
			[Parameter(Mandatory = $True)]
			[string]$username,
			[Parameter(Mandatory = $True)]
			[string]$password)
		
		$combined = $username + ":" + $password
		$encoding = [System.Text.Encoding]::ASCII.GetBytes($combined)
		$encodedString = [Convert]::ToBase64String($encoding)
		
		Return "Basic " + $encodedString
	}
	
	Function Map-AppDetailsJSON
	{
		
		Param (
			[Parameter(Mandatory = $True)]
			$appdetails
			
		)
		
		# Setup DeviceType and SupportedModels 
		#$appDetails | Add-Member -MemberType NoteProperty -Name "DeviceType" -Value "WinRT" -Force
		<#$appDetails | Add-Member -MemberType NoteProperty -Name "SupportedModels" -Value @{
				Model = @(@{
						ModelId   = 83
						ModelName = "Desktop"
					})
			} -Force
	#>
		# Map all table values to the AirWatch JSON format
		#$test =
		[string]$changelog = "Created by bpeppin"
		$date = ((Get-Date).AddDays(- $days)).ToString('yyyy-MM-dd')
		Write-Status "Created on $date by $($textboxAdmin.Text)"
		$applicationProperties = @{
			BlobId = $appdetails.blobID
			DeviceType = "12"
			ApplicationName = $appDetails.title
			FileName = $appDetails.FileName
			ChangeLog = $changelog
			Description = $appDetails.AdditionalInformationUrls
			Comments = "Created on $date by $($textboxAdmin.Text)"
			SupportedModels = @{
				Model		    = @(@{
						ModelId   = 83
						#ModelName = "Desktop"
					})
			}
			AutoUpdateVersion = "true"
			DeploymentOptions = @{
				WhenToInstall = @{
					DiskSpaceRequiredInKb = 0
					DevicePowerRequired   = 0
					RamRequiredInMb	      = 0
				}
				HowToInstall  = @{
					AdminPrivileges = "true"
					DeviceRestart   = $appDetails.DeviceRestart
					InstallCommand  = $appDetails.InstallCommand
					InstallContext		     = "Device"
					InstallTimeoutInMinutes = 60
					InstallerRebootExitCode = $appDetails.InstallerRebootCode
					InstallerSuccessExitCode = $appDetails.InstallerSuccessCode
					RetryCount	    = 3
					RetryIntervalInMinutes = 5
					RestartDeadlineInDays = 3
				}
				WhenToCallInstallComplete = @{
					UseAdditionalCriteria = "True"
					IdentifyApplicationBy = "UsingCustomScript"
					CustomScript		  = @{
						ScriptType			   = "PowerShell"
						CommandToRunTheScript  = "powershell -executionpolicy bypass -file Check-KB.ps1 -KB KB$($appdetails.KB)"
						CustomScriptFileBlodId = $appdetails.blobID2
						SuccessExitCode	       = 0
					}
				}
			}
			FilesOptions    = @{
				ApplicationUnInstallProcess = @{
					UseCustomScript = "true"
					CustomScript    = @{
						CustomScriptType = "Input"
						UninstallCommand = "na"
						UninstallScriptBlobId = 0
					}
				}
			}
			#DeviceType	    = $appDetails.DeviceType
			#EnableProvisioning = "false"
			#IsDependencyFile = "false"
			LocationGroupId = $appDetails.GroupId
			PushMode	    = 0
			SupportEmail    = ""
			SupportPhone = ""
			IsDependencyFile = $appDetails.Dependency
			#SupportedModels = $appDetails.SupportedModels
			SupportedProcessorArchitecture = "x86"
	
		}
		
		$json = $applicationProperties | ConvertTo-Json -Depth 10
		Write-Verbose "------- JSON to Post---------"
		Write-Verbose $json
		Write-Verbose "-----------------------------"
		Write-Verbose ""
		
		Return $json
	}
	
	$buttonSaveToWS1_Click={
		#TODO: Place custom script here
		Migrate-AppsToAirWatch -Headers $script:headers -OGID $script:ogid
		
	}
	
	$Connect_Click={
		#TODO: Place custom script here
		if (-not $textboxUsername.Text)
		{
			[System.Windows.Forms.MessageBox]::Show('Please enter username.', 'Invalid Input')
			return
		}
		if (-not $textboxPassword.Text)
		{
			[System.Windows.Forms.MessageBox]::Show('Please enter password.', 'Invalid Input')
			return
		}
		if (-not $textboxAPI.Text)
		{
			[System.Windows.Forms.MessageBox]::Show('Please enter API Key.', 'Invalid Input')
			return
		}
		if (-not $textboxGroupID.Text)
		{
			[System.Windows.Forms.MessageBox]::Show('Please enter Group ID.', 'Invalid Input')
			return
		}
		if (-not $textboxServer.Text)
		{
			[System.Windows.Forms.MessageBox]::Show('Please enter Workspace ONE server.', 'Invalid Input')
			return
		}
	<#	if (-not $textboxAdmin.Text)
		{
			[System.Windows.Forms.MessageBox]::Show('Please enter your name.', 'Invalid Input')
			return
		}#>
		$restUserName = Create-BasicAuthHeader -username $textboxUsername.Text -password $textboxPassword.Text
			
		#Build Headers for APIs
		$script:headers = Create-Headers -authString $restUserName `
								  -tenantCode $textboxAPI.Text `
								  -acceptType "application/json" `
								  -contentType "application/json"
		
		$groupID = $textboxGroupID.Text
		$awServer = $textboxServer.Text
		Write-Status "Validating credentials and checking groupID..."
		try
		{
			$og = Invoke-RestMethod -Method Get -Uri "$awServer/api/system/groups/search?groupid=$groupID" -Headers $headers
		}
		catch
		{
			Write-Status $_.Exception
		}
		
		$script:ogid = $og.LocationGroups.ID.Value
		if ($og)
		{
			Write-Status "Success!"
			$buttonSaveToWS1.Enabled = $true
		}
		return $script:headers,$script:ogid
	
	
		#$date = ((Get-Date).AddDays(- $days)).ToString('yyyy-MM-dd')
		#Write-Status "Created on $date by $($textboxAdmin.Text)"
	}
	
	
	$button1_Click={
		#TODO: Place custom script here
		
		Try
		{
			[int32]$minutes = $TextBoxrestartWindow.Text
			Write-Status $minutes
		}
		catch
		{
			Write-Status $_.Exception.InnerException
		}
	<#	[System.Windows.Forms.MessageBox]::Show("App Name: $($response.ApplicationName)", "Success", [System.Windows.Forms.MessageBoxButtons]::OKCancel, [System.Windows.Forms.MessageBoxIcon]::Information)
		
		if ($checkboxDependency.Checked -eq $true)
		{
			$dependency = 'true'
			Write-Status $dependency
		}
		else
		{
			$dependency = 'false'
			Write-Status $dependency
		}#>
	<#	if ($radiobuttonDoNotRestart.Checked -eq $true)
		{
			$DeviceRestart = "DoNotRestart"
			Write-Status $DeviceRestart
		}
		if ($radiobuttonForceRestart.Checked -eq $true)
		{
			$DeviceRestart = "ForceRestart"
			Write-Status $DeviceRestart
			
		}
		if ($radiobuttonUserDeferredRestart.Checked -eq $true)
		{
			$DeviceRestart = "RestartIfNeeded"
			Write-Status $DeviceRestart
			
		}#>
	}
	
	$checkboxDependency_CheckedChanged={
		#TODO: Place custom script here
		If ($checkboxDependency.Checked -eq $true)
		{
			
			$radiobuttonUserDeferredRestart.Enabled = $false
			$radiobuttonDoNotRestart.Checked = $true
		}
		else
		{
	
			$radiobuttonUserDeferredRestart.Enabled = $True
		}
		
	}
	
	$linklabelForMoreInfoClickHere_LinkClicked=[System.Windows.Forms.LinkLabelLinkClickedEventHandler]{
	#Event Argument: $_ = [System.Windows.Forms.LinkLabelLinkClickedEventArgs]
		#TODO: Place custom script here
		start https://github.com/brookspeppin/WorkspaceONE/tree/master/Windows-Updater
	}
	
	
	$labelCredits_Click={
		#TODO: Place custom script here
		[System.Windows.Forms.MessageBox]::Show("Written by: Brooks Peppin`n-David Sequra for his posting of the Windows Updates catalog on his Github page. Check out his great tool OSDBuilder!`n-Chris Halstead (@chrisdhalstead) for some of his API/JSON functions.", "Credits", [System.Windows.Forms.MessageBoxButtons]::OKCancel, [System.Windows.Forms.MessageBoxIcon]::Information)
		
	}
	
	
	
	
	
	$radiobuttonForceRestartCustom_CheckedChanged={
		#TODO: Place custom script here
		If ($radiobuttonForceRestartCustom.Checked -eq $true)
		{
			$TextBoxrestartWindow.Enabled = $true
			$TextBoxrestartWindow.Visible = $true
			$labelMinutes.Visible = $true
		}
	}
	
	# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$formWindowsUpdaterToolFo.WindowState = $InitialFormWindowState
	}
	
	$Form_StoreValues_Closing=
	{
		#Store the control values
		$script:MainForm_OSVersion = $OSVersion.Text
		$script:MainForm_OSVersion_SelectedItem = $OSVersion.SelectedItem
		$script:MainForm_datagridview1 = $datagridview1.SelectedCells
		if ($datagridview1.SelectionMode -eq 'FullRowSelect')
		{ $script:MainForm_datagridview1_SelectedObjects = $datagridview1.SelectedRows | Select-Object -ExpandProperty DataBoundItem }
		else { $script:MainForm_datagridview1_SelectedObjects = $datagridview1.SelectedCells | Select-Object -ExpandProperty RowIndex -Unique | ForEach-Object { if ($_ -ne -1) { $datagridview1.Rows[$_].DataBoundItem } } }
		$script:MainForm_checkboxDependency = $checkboxDependency.Checked
		$script:MainForm_radiobuttonForceRestartCustom = $radiobuttonForceRestartCustom.Checked
		$script:MainForm_radiobuttonUserDeferredRestart = $radiobuttonUserDeferredRestart.Checked
		$script:MainForm_radiobuttonForceRestart = $radiobuttonForceRestart.Checked
		$script:MainForm_radiobuttonDoNotRestart = $radiobuttonDoNotRestart.Checked
		$script:MainForm_textboxGroupID = $textboxGroupID.Text
		$script:MainForm_textboxServer = $textboxServer.Text
		$script:MainForm_textboxAPI = $textboxAPI.Text
		$script:MainForm_textboxUsername = $textboxUsername.Text
		$script:MainForm_textboxPassword = $textboxPassword.Text
	}

	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$labelCredits.remove_Click($labelCredits_Click)
			$linklabelForMoreInfoClickHere.remove_LinkClicked($linklabelForMoreInfoClickHere_LinkClicked)
			$OSVersion.remove_SelectedIndexChanged($OSVersion_SelectedIndexChanged)
			$buttonGetUpdates.remove_Click($buttonGetUpdates_Click)
			$Download.remove_Click($Download_Click)
			$datagridview1.remove_CellContentClick($datagridview1_CellContentClick)
			$button1.remove_Click($button1_Click)
			$radiobuttonForceRestartCustom.remove_CheckedChanged($radiobuttonForceRestartCustom_CheckedChanged)
			$buttonSaveToWS1.remove_Click($buttonSaveToWS1_Click)
			$Connect.remove_Click($Connect_Click)
			$formWindowsUpdaterToolFo.remove_Load($formWindowsUpdaterToolFo_Load)
			$formWindowsUpdaterToolFo.remove_Load($Form_StateCorrection_Load)
			$formWindowsUpdaterToolFo.remove_Closing($Form_StoreValues_Closing)
			$formWindowsUpdaterToolFo.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch { Out-Null <# Prevent PSScriptAnalyzer warning #> }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$formWindowsUpdaterToolFo.SuspendLayout()
	$groupbox2.SuspendLayout()
	$groupbox1.SuspendLayout()
	$groupbox3.SuspendLayout()
	#
	# formWindowsUpdaterToolFo
	#
	$formWindowsUpdaterToolFo.Controls.Add($splitter1)
	$formWindowsUpdaterToolFo.Controls.Add($labelCredits)
	$formWindowsUpdaterToolFo.Controls.Add($linklabelForMoreInfoClickHere)
	$formWindowsUpdaterToolFo.Controls.Add($label2)
	$formWindowsUpdaterToolFo.Controls.Add($label1)
	$formWindowsUpdaterToolFo.Controls.Add($groupbox2)
	$formWindowsUpdaterToolFo.Controls.Add($statusbar1)
	$formWindowsUpdaterToolFo.Controls.Add($datagridview1)
	$formWindowsUpdaterToolFo.Controls.Add($groupbox1)
	$formWindowsUpdaterToolFo.AutoScaleDimensions = '7, 17'
	$formWindowsUpdaterToolFo.AutoScaleMode = 'Font'
	$formWindowsUpdaterToolFo.BackColor = '64, 64, 64'
	$formWindowsUpdaterToolFo.ClientSize = '1041, 648'
	$formWindowsUpdaterToolFo.Font = 'Segoe UI, 9.75pt'
	$formWindowsUpdaterToolFo.ForeColor = 'White'
	#region Binary Data
	$formWindowsUpdaterToolFo.Icon = [System.Convert]::FromBase64String('
AAABAAUAEBAAAAEAIABoBAAAVgAAABgYAAABACAAiAkAAL4EAAAgIAAAAQAgAKgQAABGDgAAMDAA
AAEAIACoJQAA7h4AAAAAAAABACAAWCUAAJZEAAAoAAAAEAAAACAAAAABACAAAAAAAAAEAADougEA
6LoBAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABBAIAATsCAAGUAgAB0QIAAeoCAAHnAgABxwIAAYIC
AAEqAgABAQIAAQAAAAAAAAAAAAIAAQACAAEAAgABFAIAAYYCAAHpAgAB/wIAAf4CAAH3AgAB+AIA
Af8CAAH+AgAB2wIAAWoCAAEJAgABAAAAAAACAAEAAgABFQIAAagCAAH+AgAB8wIAAaoCAAFgAgAB
PwIAAUICAAFsAgABvQIAAfoCAAH4AgABhgIAAQgCAAEAAgABBQIAAYwCAAH/AgAB4QIAAVcCAAEH
AgABAAIAAQACAAEAAgABAAIAAQ4CAAF1AgAB8QIAAfgCAAFkAgABAAIAAUYCAAHsAgAB8QIAAVMC
AAEAAgABAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABAwIAAXkCAAH+AgAB0wIAASICAAGlAgAB/wIA
AZ4CAAEFAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAQACAAEUAgABxgIAAf4CAAFqAgAB
4wIAAfsCAAFQAgABAAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABAAIAAVoCAAG/
AgABRQIAAfwCAAHsAgABLgIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAQAC
AAECAgABCAIAAQECAAH8AgAB7AIAAS4CAAEAAAAAAAAAAAAAAAAAAgABAAIAAQACAAEbAgABLwIA
AS8CAAEvAgABLwIAAS4CAAEbAgAB4wIAAfsCAAFPAgABAAIAAQAAAAAAAAAAAAIAAQACAAEaAgAB
xgIAAfICAAHwAgAB7gIAAe0CAAHtAgAB0AIAAaUCAAH/AgABngIAAQQCAAEAAAAAAAAAAAACAAEA
AgABFAIAAaoCAAHXAgAB1AIAAe8CAAH/AgAB/wIAAf8CAAFGAgAB7QIAAfECAAFTAgABAAIAAQAA
AAAAAgABAAIAAQACAAEKAgABEQIAATsCAAHbAgAB/wIAAf8CAAH/AgABBQIAAYwCAAH/AgAB4QIA
AVcCAAEHAgABAAIAAQACAAEAAgABAAIAASYCAAG5AgAB/wIAAecCAAH1AgAB/wIAAQACAAEVAgAB
qAIAAf4CAAHzAgABqwIAAWECAAFAAgABRQIAAXkCAAHWAgAB/wIAAeACAAFmAgAB4gIAAf8CAAEA
AgABAAIAARQCAAGGAgAB6QIAAf8CAAH+AgAB9wIAAfkCAAH/AgAB/gIAAdACAAFFAgABIgIAAeMC
AAH/AAAAAAAAAAACAAEAAgABBAIAATsCAAGUAgAB0QIAAeoCAAHnAgABygIAAYMCAAEkAgABAAIA
AQ8CAAGwAgABxuAHAADAAwAAgAEAAAPBAAAP4AAAD/AAAB/4AAAf+AAAH4AAAB8AAAAPAAAAD4AA
AAPAAACAAAAAwAAAAOAIAAAoAAAAGAAAADAAAAABACAAAAAAAAAJAADougEA6LoBAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABAwIAAScCAAFsAgABqgIAAdACAAHfAgAB3AIAAcYC
AAGYAgABVQIAARcCAAEAAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIA
AQACAAEkAgABigIAAd0CAAH7AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB9gIAAckCAAFoAgAB
EQIAAQACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABAwIAAVUCAAHWAgAB/wIAAf8CAAH/
AgAB/wIAAf4CAAH7AgAB/AIAAf8CAAH/AgAB/wIAAf8CAAH7AgABtQIAAS8CAAEAAgABAAAAAAAA
AAAAAAAAAAIAAQACAAEDAgABawIAAe8CAAH/AgAB/wIAAfsCAAHUAgABkwIAAWMCAAFOAgABUgIA
AW8CAAGnAgAB5QIAAf8CAAH/AgAB/wIAAdQCAAE7AgABAAIAAQAAAAAAAgABAAIAAQACAAFbAgAB
8AIAAf8CAAH/AgAB4QIAAXECAAEaAgABAQIAAQAAAAAAAgABAAIAAQACAAEEAgABLQIAAZcCAAHz
AgAB/wIAAf8CAAHRAgABKwIAAQACAAEAAgABAAIAAS0CAAHcAgAB/wIAAf8CAAHNAgABOQIAAQAC
AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAQYCAAFlAgAB7AIAAf8CAAH/AgABqwIA
AQwCAAEAAgABBQIAAZoCAAH/AgAB/wIAAdsCAAE2AgABAAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAIAAQACAAEBAgABaQIAAfYCAAH/AgAB+AIAAVkCAAEAAgABOAIAAecCAAH/
AgAB+QIAAWQCAAEAAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC
AAEAAgABCAIAAaMCAAH/AgAB/wIAAbcCAAENAgABiAIAAf8CAAH/AgABxAIAARECAAEAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABAAIAATwCAAHuAgAB
/wIAAekCAAE0AgAByAIAAf8CAAH/AgABegIAAQACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAQkCAAGlAgAB/wIAAcoCAAEhAgAB7QIAAf8C
AAH4AgABRwIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAgABAAIAAQACAAEZAgABUAIAASgCAAEAAgAB/AIAAf8CAAHuAgABMQIAAQAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAgAB/AIAAf8CAAHuAgABMQIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAIAAQACAAEAAgABAQIAAQECAAEBAgABAQIAAQECAAEBAgABAQIAAQECAAEAAgAB7QIA
Af8CAAH4AgABRwIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABAAIAASECAAGLAgAB
owIAAaMCAAGjAgABowIAAaMCAAGjAgABowIAAZwCAAFTAgAByAIAAf8CAAH/AgABeQIAAQACAAEA
AAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABAAIAAYgCAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8C
AAH/AgAB/wIAAf8CAAHrAgABiAIAAf8CAAH/AgABwwIAARECAAEAAAAAAAAAAAAAAAAAAAAAAAAA
AAACAAEAAgABAAIAAXECAAH6AgAB/wIAAf8CAAH/AgAB/gIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB
OAIAAecCAAH/AgAB+QIAAWQCAAEAAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAQ0CAAFP
AgABZQIAAWQCAAFkAgABuwIAAf8CAAH/AgAB/wIAAf8CAAH/AgABBQIAAZoCAAH/AgAB/wIAAdsC
AAE2AgABAAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAQACAAE9AgAB4QIA
Af8CAAH/AgAB/wIAAf8CAAH/AgABAAIAAS0CAAHcAgAB/wIAAf8CAAHOAgABOQIAAQACAAEAAAAA
AAAAAAAAAAAAAAAAAAAAAAACAAEAAgABAAIAATUCAAHRAgAB/wIAAf8CAAH2AgAB+wIAAf8CAAH/
AgABAAIAAQACAAFbAgAB8AIAAf8CAAH/AgAB4QIAAXICAAEaAgABAQIAAQAAAAAAAgABAAIAAQAC
AAELAgABWQIAAdgCAAH/AgAB/wIAAfICAAGMAgAB5gIAAf8CAAH/AAAAAAIAAQACAAEDAgABawIA
Ae8CAAH/AgAB/wIAAfwCAAHVAgABlQIAAWUCAAFQAgABVQIAAXgCAAG7AgAB9QIAAf8CAAH/AgAB
+QIAAYACAAErAgAB5QIAAf8CAAH/AAAAAAAAAAACAAEAAgABAwIAAVUCAAHWAgAB/wIAAf8CAAH/
AgAB/wIAAf4CAAH7AgAB/AIAAf8CAAH/AgAB/wIAAf8CAAHzAgABgQIAAQgCAAEkAgAB5QIAAf8C
AAH/AAAAAAAAAAAAAAAAAgABAAIAAQACAAEkAgABigIAAd0CAAH7AgAB/wIAAf8CAAH/AgAB/wIA
Af8CAAH/AgAB9wIAAcMCAAFTAgABBQIAAQACAAEdAgAB3AIAAf8CAAH0AAAAAAAAAAAAAAAAAAAA
AAAAAAACAAEAAgABAwIAAScCAAFsAgABqgIAAdACAAHfAgAB3QIAAckCAAGeAgABWQIAARUCAAEA
AgABAAIAAQACAAEEAgABewIAAdgCAAGE/AB/APgAHwDgAA8AwAAHAMA8AwCB/wEAA/+BAAf/wAAH
/+AAD//gAA//8QAP//8AD/4BAA/4AAAP+AAAB/gAAAf4AAAD/4AAgf8AAMA8AADAAAAA4AAAAPgA
EAD8AHAAKAAAACAAAABAAAAAAQAgAAAAAAAAEAAA6LoBAOi6AQAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAQACAAEUAgABRwIAAYECAAGuAgAByQIAAdQCAAHR
AgABvwIAAZwCAAFoAgABLwIAAQgCAAEAAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAQECAAEjAgABeQIAAcgCAAHxAgAB/gIA
Af8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAfsCAAHkAgABqgIAAVICAAENAgABAAIAAQAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAQACAAEQAgABcAIAAdoCAAH+
AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB9wIAAbUC
AAE/AgABAgIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAQACAAEAAgABJwIA
Aa4CAAH7AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf4CAAH/AgAB/wIAAf8CAAH/AgAB
/wIAAf8CAAH/AgAB/wIAAekCAAFzAgABCgIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEA
AgABAAIAATQCAAHLAgAB/wIAAf8CAAH/AgAB/wIAAf8CAAHwAgABwwIAAZECAAFvAgABYAIAAWMC
AAF6AgABpQIAAdgCAAH6AgAB/wIAAf8CAAH/AgAB/wIAAfkCAAGPAgABDgIAAQAAAAAAAAAAAAAA
AAAAAAAAAgABAAIAAQACAAEsAgABzQIAAf8CAAH/AgAB/wIAAf8CAAHuAgABmgIAAT0CAAENAgAB
AAIAAQAAAAAAAgABAAIAAQACAAEDAgABGwIAAV8CAAHDAgAB+wIAAf8CAAH/AgAB/wIAAfsCAAGL
AgABCAIAAQAAAAAAAAAAAAAAAAACAAEAAgABFQIAAbcCAAH/AgAB/wIAAf8CAAH/AgAByQIAAUYC
AAEEAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABAAIAARQCAAF8AgAB7QIA
Af8CAAH/AgAB/wIAAfcCAAFqAgABAAIAAQAAAAAAAgABAAIAAQECAAGAAgAB/gIAAf8CAAH/AgAB
/wIAAbUCAAEjAgABAAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AgABAAIAAQICAAFXAgAB5gIAAf8CAAH/AgAB/wIAAeECAAEzAgABAAIAAQACAAEAAgABMgIAAeUC
AAH/AgAB/wIAAf8CAAHCAgABIAIAAQACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAQACAAFcAgAB8AIAAf8CAAH/AgAB/wIAAaICAAEGAgAB
AAIAAQICAAGRAgAB/wIAAf8CAAH/AgAB5gIAATsCAAEAAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAQQCAAGJAgAB/wIAAf8C
AAH/AgAB7gIAATwCAAEAAgABJwIAAdsCAAH/AgAB/wIAAf8CAAGEAgABAQIAAQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAB
AAIAAR4CAAHSAgAB/wIAAf8CAAH/AgABjgIAAQACAAFpAgAB+gIAAf8CAAH/AgAB4gIAASkCAAEA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAACAAEAAgABAAIAAXkCAAH/AgAB/wIAAf8CAAHFAgABDwIAAaoCAAH/AgAB/wIA
Af8CAAGlAgABBAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABKwIAAeACAAH/AgAB/wIAAaUCAAEH
AgAB1wIAAf8CAAH/AgAB/wIAAWwCAAEAAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAQACAAEBAgABUAIA
AbACAAGaAgABKAIAAQACAAHyAgAB/wIAAf8CAAH4AgABRwIAAQAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAIAAQACAAEAAgABBQIAAQMCAAEAAgABAAIAAf0CAAH/AgAB/wIAAfECAAE2AgABAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAB/QIAAf8CAAH/AgAB
8QIAATYCAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC
AAHyAgAB/wIAAf8CAAH3AgABRwIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAgABAAIAAQACAAELAgABNgIAAUICAAFCAgABQgIAAUICAAFCAgABQgIAAUICAAFCAgAB
QgIAAUICAAEvAgABBwIAAdcCAAH/AgAB/wIAAf8CAAFrAgABAAIAAQAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABCgIAAZUCAAHxAgAB9gIAAfYCAAH2AgAB9gIAAfYC
AAH2AgAB9gIAAfYCAAH2AgAB9wIAAeoCAAGFAgABqgIAAf8CAAH/AgAB/wIAAaUCAAEEAgABAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAQACAAExAgAB7QIAAf8CAAH/AgAB
/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAfMCAAFpAgAB+gIAAf8CAAH/
AgAB4QIAASkCAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAASQC
AAHeAgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIA
AScCAAHbAgAB/wIAAf8CAAH/AgABhAIAAQECAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAACAAEAAgABAQIAAVUCAAG5AgABxwIAAcYCAAHGAgABxQIAAdQCAAH9AgAB/wIAAf8CAAH/
AgAB/wIAAf8CAAH/AgABAgIAAZECAAH/AgAB/wIAAf8CAAHmAgABOwIAAQACAAEAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABAAIAAQgCAAENAgABDQIAAQwCAAEQAgABlAIA
Af8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAEAAgABMgIAAeUCAAH/AgAB/wIAAf8CAAHCAgAB
IAIAAQACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEA
AgABAAIAAV4CAAHyAgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAQACAAEBAgABgAIAAf4C
AAH/AgAB/wIAAf8CAAG2AgABIwIAAQACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAgABAAIAAQACAAFNAgAB5AIAAf8CAAH/AgAB/wIAAf0CAAH+AgAB/wIAAf8CAAH/AAAA
AAIAAQACAAEVAgABtwIAAf8CAAH/AgAB/wIAAf8CAAHKAgABRwIAAQUCAAEAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAIAAQACAAEGAgABXQIAAeQCAAH/AgAB/wIAAf8CAAH7AgABsgIAAesC
AAH/AgAB/wIAAf8AAAAAAgABAAIAAQACAAEsAgABzQIAAf8CAAH/AgAB/wIAAf8CAAHuAgABnAIA
AT8CAAEOAgABAQIAAQAAAAAAAgABAAIAAQACAAEHAgABMwIAAZoCAAHzAgAB/wIAAf8CAAH/AgAB
/wIAAakCAAE5AgAB5QIAAf8CAAH/AgAB/wAAAAAAAAAAAgABAAIAAQACAAE0AgABywIAAf8CAAH/
AgAB/wIAAf8CAAH/AgAB8QIAAcUCAAGUAgABcgIAAWMCAAFnAgABggIAAbQCAAHqAgAB/wIAAf8C
AAH/AgAB/wIAAf8CAAG+AgABHgIAASUCAAHnAgAB/wIAAf8CAAH/AAAAAAAAAAAAAAAAAgABAAIA
AQACAAEnAgABrgIAAfsCAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB
/wIAAf8CAAH/AgAB/wIAAf8CAAH+AgABuQIAASUCAAEAAgABJwIAAecCAAH/AgAB/wIAAf8AAAAA
AAAAAAAAAAAAAAAAAgABAAIAAQACAAEQAgABcAIAAdoCAAH+AgAB/wIAAf8CAAH/AgAB/wIAAf8C
AAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB8QIAAZICAAEZAgABAAIAAQACAAEmAgAB5gIA
Af8CAAH/AgAB/gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAQACAAEBAgABIwIAAXkCAAHIAgAB
8QIAAf4CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH8AgAB5wIAAakCAAFGAgABBgIAAQAAAAAA
AgABAAIAARICAAHFAgAB/wIAAf8CAAHWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC
AAEAAgABAAIAARQCAAFHAgABgQIAAa4CAAHJAgAB1AIAAdECAAHCAgABogIAAXACAAE0AgABCAIA
AQACAAEAAAAAAAAAAAACAAEAAgABAAIAAUUCAAG/AgABugIAAUb/wAP//gAA//wAAD/4AAAf8AAA
D+AHwAfAH/gHgH/8A4D//wEB//8BAf//gQP//8AD///AB///wQf///MH////B////wf/wAAH/4AA
A/+AAAP/gAAB/4AAAf/gAID//gCAf/wAwB/wAOADwADwAAAA+AAAIPwAAGD+AADg/8AD8CgAAAAw
AAAAYAAAAAEAIAAAAAAAACQAAOi6AQDougEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABAQIAARICAAE2AgAB
YQIAAYcCAAGkAgABtQIAAbwCAAG2AgABqgIAAZECAAFuAgABRAIAAR4CAAEEAgABAAIAAQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABAAIA
AQ8CAAFEAgABiwIAAcYCAAHpAgAB+QIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH8AgAB
8AIAAdUCAAGjAgABXgIAAR4CAAECAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAgABAAIAAQACAAEVAgABZAIAAcACAAH0AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIA
Af8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB+wIAAdkCAAGIAgABLQIAAQICAAEAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABCQIAAVYCAAHFAgAB+gIAAf8CAAH/AgAB/wIAAf8C
AAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIA
Af8CAAH/AgAB4gIAAYICAAEdAgABAAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAQACAAEjAgABngIAAfUCAAH/
AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8C
AAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf4CAAHKAgABTAIAAQMCAAEAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgAB
AQIAAUICAAHNAgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/
AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8C
AAH/AgAB7QIAAXgCAAEMAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAIAAQACAAECAgABVwIAAeMCAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB
/wIAAf8CAAH6AgAB4wIAAcICAAGjAgABjwIAAYUCAAGJAgABmQIAAbUCAAHWAgAB8wIAAf8CAAH/
AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAfkCAAGTAgABEQIAAQAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAQECAAFaAgAB6QIAAf8CAAH/AgAB/wIA
Af8CAAH/AgAB/wIAAf8CAAH/AgAB5AIAAaECAAFXAgABJgIAAQwCAAECAgABAAIAAQACAAEAAgAB
AQIAAQcCAAEZAgABQQIAAYMCAAHOAgAB+gIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH8
AgABmwIAARACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABAAIAAUsC
AAHmAgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAegCAAGMAgABLgIAAQQCAAEAAgABAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAQACAAEXAgABZAIAAcwCAAH9AgAB
/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/AIAAY0CAAEIAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAIAAQACAAEAAgABLgIAAdYCAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH9AgABuAIAATsC
AAEDAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAACAAEAAgABAAIAARsCAAGIAgAB7wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAfYCAAFrAgAB
AQIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAQACAAEQAgABrwIAAf8CAAH/AgAB/wIAAf8CAAH/
AgAB/wIAAfcCAAGOAgABFQIAAQACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAQACAAEEAgABVgIAAd4CAAH/AgAB/wIA
Af8CAAH/AgAB/wIAAf8CAAHkAgABOwIAAQACAAEAAAAAAAAAAAAAAAAAAgABAAIAAQACAAFvAgAB
+wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB9gIAAXwCAAEJAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC
AAEAAgABAAIAAUECAAHZAgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgABtgIAARACAAEAAAAAAAAA
AAAAAAAAAgABAAIAAScCAAHaAgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH7AgABhgIAAQgCAAEAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAQACAAFFAgAB4wIAAf8CAAH/AgAB/wIAAf8C
AAH/AgAB+gIAAWUCAAEAAgABAAAAAAACAAEAAgABAQIAAYcCAAH/AgAB/wIAAf8CAAH/AgAB/wIA
Af8CAAGpAgABDwIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAQACAAEA
AgABYwIAAfUCAAH/AgAB/wIAAf8CAAH/AgAB/wIAAcsCAAEYAgABAAAAAAACAAEAAgABJAIAAdwC
AAH/AgAB/wIAAf8CAAH/AgAB/wIAAdkCAAErAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAACAAEAAgABCAIAAZ0CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAfsCAAFj
AgABAAIAAQACAAEAAgABbQIAAf4CAAH/AgAB/wIAAf8CAAH/AgAB/AIAAW4CAAEAAgABAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAS0CAAHfAgAB
/wIAAf8CAAH/AgAB/wIAAf8CAAG3AgABCwIAAQACAAEMAgABtwIAAf8CAAH/AgAB/wIAAf8CAAH/
AgABzAIAARgCAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAgABAAIAAQACAAGGAgAB/wIAAf8CAAH/AgAB/wIAAf8CAAHsAgABNQIAAQACAAE0AgAB
5gIAAf8CAAH/AgAB/wIAAf8CAAH/AgABdgIAAQACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAQACAAExAgAB6AIAAf8CAAH/AgAB/wIA
Af8CAAH8AgABVQIAAQACAAFrAgAB+wIAAf8CAAH/AgAB/wIAAf8CAAHoAgABLwIAAQAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAQAC
AAEHAgABqgIAAf8CAAH/AgAB/wIAAf8CAAHvAgABOwIAAQACAAGgAgAB/wIAAf8CAAH/AgAB/wIA
Af8CAAG8AgABCwIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAIAAQACAAEAAgABPwIAAd8CAAH/AgAB/wIAAfsCAAGVAgABCAIAAQAC
AAHKAgAB/wIAAf8CAAH/AgAB/wIAAf8CAAGLAgABAAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABAQIAATYCAAGM
AgABngIAAWQCAAEQAgABAAAAAAACAAHmAgAB/wIAAf8CAAH/AgAB/wIAAf8CAAFmAgABAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAIAAQACAAEAAgABAQIAAQACAAEAAAAAAAAAAAACAAH2AgAB/wIAAf8CAAH/
AgAB/wIAAfkCAAFNAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAACAAH9AgAB/wIAAf8CAAH/AgAB/wIAAfYCAAFCAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAH9AgAB/wIAAf8CAAH/AgAB/wIAAfYCAAFCAgAB
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAH2AgAB/wIA
Af8CAAH/AgAB/wIAAfkCAAFNAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAACAAHmAgAB/wIAAf8CAAH/AgAB/wIAAf8CAAFlAgABAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAIAAQACAAEBAgABJAIAAVACAAFYAgABVwIAAVcCAAFXAgABVwIAAVcCAAFXAgABVwIAAVcCAAFX
AgABVwIAAVcCAAFXAgABWAIAAVcCAAFIAgABFwIAAQACAAHKAgAB/wIAAf8CAAH/AgAB/wIAAf8C
AAGLAgABAAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAQACAAFXAgAB3AIAAfsCAAH8AgAB/AIAAfwCAAH8AgAB
/AIAAfwCAAH8AgAB/AIAAfwCAAH8AgAB/AIAAfwCAAH8AgAB/AIAAfwCAAH4AgABwQIAATcCAAGg
AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAG8AgABCwIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAASECAAHXAgAB/wIA
Af8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB
/wIAAf8CAAH/AgAB/wIAAcECAAFrAgAB+wIAAf8CAAH/AgAB/wIAAf8CAAHnAgABLgIAAQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAgABAAIAAUcCAAH3AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIA
Af8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAfkCAAE0AgAB5gIAAf8CAAH/AgAB
/wIAAf8CAAH/AgABdQIAAQACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAATYCAAHuAgAB/wIAAf8CAAH/AgAB/wIAAf8C
AAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIA
Af8CAAEMAgABtwIAAf8CAAH/AgAB/wIAAf8CAAH/AgABywIAARgCAAEAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAQkCAAGb
AgAB/gIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8C
AAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAEAAgABbQIAAf4CAAH/AgAB/wIAAf8CAAH/AgAB/AIA
AW0CAAEAAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAgABAAIAAQACAAEUAgABcwIAAa8CAAG3AgABtwIAAbcCAAG3AgABtwIAAbYCAAG4
AgAB6gIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAEAAgABJAIAAdwC
AAH/AgAB/wIAAf8CAAH/AgAB/wIAAdkCAAEqAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABAAIAAQUCAAEHAgAB
BwIAAQcCAAEHAgABBwIAAQQCAAFEAgAB6AIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/
AgAB/wIAAf8CAAEAAgABAQIAAYcCAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAGoAgABDwIAAQAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAR0CAAHCAgAB/wIAAf8CAAH/AgAB
/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8AAAAAAgABAAIAAScCAAHaAgAB/wIAAf8CAAH/
AgAB/wIAAf8CAAH7AgABhQIAAQcCAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABDgIA
AaECAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8AAAAAAgAB
AAIAAQACAAFvAgAB+wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB9gIAAX0CAAEJAgABAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAIAAQACAAEJAgABiAIAAfsCAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIA
Af8CAAH/AgAB/wIAAf8AAAAAAAAAAAIAAQACAAEQAgABrwIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB
/wIAAfcCAAGPAgABFQIAAQACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAQ0CAAGGAgAB+AIAAf8CAAH/AgAB/wIAAf8C
AAH/AgAB/wIAAekCAAH3AgAB/wIAAf8CAAH/AgAB/wIAAf8AAAAAAAAAAAIAAQACAAEAAgABLgIA
AdYCAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH9AgABugIAAT0CAAEDAgABAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAQACAAEAAgABHwIAAZ4CAAH6
AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB4gIAAW8CAAHoAgAB/wIAAf8CAAH/AgAB/wIAAf8A
AAAAAAAAAAAAAAACAAEAAgABAAIAAUsCAAHmAgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIA
AekCAAGPAgABMAIAAQUCAAEAAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgAB
AAIAAQwCAAFVAgABywIAAf4CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAHxAgABXwIAASwCAAHp
AgAB/wIAAf8CAAH/AgAB/wIAAf8AAAAAAAAAAAAAAAAAAAAAAgABAAIAAQECAAFaAgAB6QIAAf8C
AAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB5gIAAaQCAAFaAgABKAIAAQ4CAAEDAgABAAIA
AQACAAEAAgABAgIAAQsCAAEnAgABYgIAAbcCAAH1AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB
/wIAAfkCAAF9AgABAgIAASsCAAHpAgAB/wIAAf8CAAH/AgAB/wIAAf8AAAAAAAAAAAAAAAAAAAAA
AAAAAAIAAQACAAECAgABVwIAAeMCAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8C
AAH7AgAB5QIAAcUCAAGnAgABlAIAAYoCAAGOAgABoQIAAb8CAAHjAgAB+wIAAf8CAAH/AgAB/wIA
Af8CAAH/AgAB/wIAAf8CAAH/AgAB+wIAAY8CAAELAgABAAIAASsCAAHpAgAB/wIAAf8CAAH/AgAB
/wIAAf8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABAQIAAUICAAHNAgAB/wIAAf8CAAH/
AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8C
AAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH4AgABjgIAAQ4CAAEAAgABAAIA
ASsCAAHpAgAB/wIAAf8CAAH/AgAB/wIAAf8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAB
AAIAAQACAAEjAgABngIAAfUCAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/
AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAe0C
AAF4AgABCgIAAQAAAAAAAgABAAIAASsCAAHpAgAB/wIAAf8CAAH/AgAB/wIAAf8AAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABCQIAAVYCAAHFAgAB+gIAAf8CAAH/AgAB
/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/
AgAB/wIAAf8CAAH9AgAByQIAAUwCAAEDAgABAAAAAAAAAAAAAgABAAIAASoCAAHoAgAB/wIAAf8C
AAH/AgAB/wIAAf4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIA
AQACAAEVAgABZAIAAcACAAH0AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB
/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/AIAAdUCAAF4AgABGgIAAQACAAEAAAAAAAAAAAAAAAAA
AgABAAIAARcCAAHRAgAB/wIAAf8CAAH/AgAB/wIAAd8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABAAIAAQ8CAAFEAgABiwIAAcYCAAHpAgAB+QIA
Af8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH9AgAB9AIAAdwCAAGrAgABYgIAAR0CAAEBAgAB
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAQACAAFqAgAB8gIAAf8CAAH/AgAB6wIAAWkAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC
AAEAAgABAQIAARICAAE2AgABYQIAAYcCAAGkAgABtQIAAbwCAAG3AgABrQIAAZYCAAF3AgABTQIA
ASQCAAEHAgABAAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAQACAAEHAgAB
WwIAAa4CAAGqAgABUgIAAQb//wAB//8AAP/8AAA//wAA//AAAA//AAD/wAAAB/8AAP+AAAAB/wAA
/gAAAAD/AAD8AAAAAH8AAPgAA4AAPwAA+AA//AAfAADwAP//AA8AAOAD//+ADwAA4Af//+AHAADA
D///8AcAAIAf///4AwAAgD////gDAACAf////AEAAAB////+AQAAAP////4BAAAA/////gEAAAD/
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')
	#endregion
	$formWindowsUpdaterToolFo.Margin = '4, 3, 4, 3'
	$formWindowsUpdaterToolFo.MaximizeBox = $False
	$formWindowsUpdaterToolFo.Name = 'formWindowsUpdaterToolFo'
	$formWindowsUpdaterToolFo.StartPosition = 'CenterScreen'
	$formWindowsUpdaterToolFo.Text = 'Windows Updater Tool for Workspace ONE'
	$formWindowsUpdaterToolFo.add_Load($formWindowsUpdaterToolFo_Load)
	#
	# splitter1
	#
	$splitter1.Location = '0, 0'
	$splitter1.Margin = '4, 4, 4, 4'
	$splitter1.Name = 'splitter1'
	$splitter1.Size = '4, 620'
	$splitter1.TabIndex = 25
	$splitter1.TabStop = $False
	#
	# labelCredits
	#
	$labelCredits.AutoSize = $True
	$labelCredits.Location = '23, 590'
	$labelCredits.Margin = '4, 0, 4, 0'
	$labelCredits.Name = 'labelCredits'
	$labelCredits.Size = '46, 22'
	$labelCredits.TabIndex = 24
	$labelCredits.Text = 'Credits'
	$labelCredits.UseCompatibleTextRendering = $True
	$labelCredits.add_Click($labelCredits_Click)
	#
	# linklabelForMoreInfoClickHere
	#
	$linklabelForMoreInfoClickHere.LinkColor = 'DeepSkyBlue'
	$linklabelForMoreInfoClickHere.Location = '23, 129'
	$linklabelForMoreInfoClickHere.Margin = '4, 0, 4, 0'
	$linklabelForMoreInfoClickHere.Name = 'linklabelForMoreInfoClickHere'
	$linklabelForMoreInfoClickHere.Size = '248, 30'
	$linklabelForMoreInfoClickHere.TabIndex = 23
	$linklabelForMoreInfoClickHere.TabStop = $True
	$linklabelForMoreInfoClickHere.Text = 'For more info, click here.'
	$linklabelForMoreInfoClickHere.UseCompatibleTextRendering = $True
	$linklabelForMoreInfoClickHere.add_LinkClicked($linklabelForMoreInfoClickHere_LinkClicked)
	#
	# label2
	#
	$label2.AutoSize = $True
	$label2.Location = '740, 590'
	$label2.Margin = '4, 0, 4, 0'
	$label2.Name = 'label2'
	$label2.Size = '0, 20'
	$label2.TabIndex = 22
	$label2.UseCompatibleTextRendering = $True
	#
	# label1
	#
	$label1.AutoSize = $True
	$label1.Location = '23, 24'
	$label1.Margin = '4, 0, 4, 0'
	$label1.Name = 'label1'
	$label1.Size = '0, 20'
	$label1.TabIndex = 21
	$label1.UseCompatibleTextRendering = $True
	#
	# groupbox2
	#
	$groupbox2.Controls.Add($labelSelectWindows10Versi)
	$groupbox2.Controls.Add($OSVersion)
	$groupbox2.Controls.Add($buttonGetUpdates)
	$groupbox2.Controls.Add($Download)
	$groupbox2.BackColor = 'Transparent'
	$groupbox2.Location = '23, 151'
	$groupbox2.Margin = '4, 4, 4, 4'
	$groupbox2.Name = 'groupbox2'
	$groupbox2.Padding = '4, 4, 4, 4'
	$groupbox2.Size = '371, 162'
	$groupbox2.TabIndex = 20
	$groupbox2.TabStop = $False
	$groupbox2.UseCompatibleTextRendering = $True
	#
	# labelSelectWindows10Versi
	#
	$labelSelectWindows10Versi.AutoSize = $True
	$labelSelectWindows10Versi.Location = '96, 22'
	$labelSelectWindows10Versi.Margin = '4, 0, 4, 0'
	$labelSelectWindows10Versi.Name = 'labelSelectWindows10Versi'
	$labelSelectWindows10Versi.Size = '164, 22'
	$labelSelectWindows10Versi.TabIndex = 11
	$labelSelectWindows10Versi.Text = 'Select Windows 10 Version'
	$labelSelectWindows10Versi.UseCompatibleTextRendering = $True
	#
	# OSVersion
	#
	$OSVersion.FormattingEnabled = $True
	[void]$OSVersion.Items.Add('20H2 x64')
	[void]$OSVersion.Items.Add('2004 x64')
	[void]$OSVersion.Items.Add('1909 x64')
	[void]$OSVersion.Items.Add('1903 x64')
	[void]$OSVersion.Items.Add('1809 x64')
	$OSVersion.Location = '96, 48'
	$OSVersion.Margin = '4, 3, 4, 3'
	$OSVersion.Name = 'OSVersion'
	$OSVersion.Size = '165, 25'
	$OSVersion.TabIndex = 10
	$OSVersion.add_SelectedIndexChanged($OSVersion_SelectedIndexChanged)
	#
	# buttonGetUpdates
	#
	$buttonGetUpdates.BackColor = 'White'
	$buttonGetUpdates.ForeColor = 'Black'
	$buttonGetUpdates.Location = '64, 96'
	$buttonGetUpdates.Margin = '4, 3, 4, 3'
	$buttonGetUpdates.Name = 'buttonGetUpdates'
	$buttonGetUpdates.Size = '105, 44'
	$buttonGetUpdates.TabIndex = 12
	$buttonGetUpdates.Text = 'Get Updates'
	$buttonGetUpdates.UseCompatibleTextRendering = $True
	$buttonGetUpdates.UseVisualStyleBackColor = $False
	$buttonGetUpdates.add_Click($buttonGetUpdates_Click)
	#
	# Download
	#
	$Download.BackColor = 'White'
	$Download.ForeColor = 'Black'
	$Download.Location = '202, 96'
	$Download.Margin = '4, 3, 4, 3'
	$Download.Name = 'Download'
	$Download.Size = '105, 44'
	$Download.TabIndex = 14
	$Download.Text = 'Download'
	$Download.UseCompatibleTextRendering = $True
	$Download.UseVisualStyleBackColor = $False
	$Download.add_Click($Download_Click)
	#
	# statusbar1
	#
	$statusbar1.Font = 'Segoe UI, 9.75pt'
	$statusbar1.Location = '0, 620'
	$statusbar1.Margin = '4, 3, 4, 3'
	$statusbar1.Name = 'statusbar1'
	$statusbar1.Size = '1041, 28'
	$statusbar1.TabIndex = 17
	#
	# datagridview1
	#
	$System_Windows_Forms_DataGridViewCellStyle_1 = New-Object 'System.Windows.Forms.DataGridViewCellStyle'
	$System_Windows_Forms_DataGridViewCellStyle_1.Font = 'Segoe UI, 9.75pt'
	$System_Windows_Forms_DataGridViewCellStyle_1.ForeColor = 'Black'
	$System_Windows_Forms_DataGridViewCellStyle_1.SelectionForeColor = 'Black'
	$datagridview1.AlternatingRowsDefaultCellStyle = $System_Windows_Forms_DataGridViewCellStyle_1
	$datagridview1.ColumnHeadersHeightSizeMode = 'AutoSize'
	$System_Windows_Forms_DataGridViewCellStyle_2 = New-Object 'System.Windows.Forms.DataGridViewCellStyle'
	$System_Windows_Forms_DataGridViewCellStyle_2.Alignment = 'MiddleLeft'
	$System_Windows_Forms_DataGridViewCellStyle_2.BackColor = 'Window'
	$System_Windows_Forms_DataGridViewCellStyle_2.Font = 'Segoe UI, 9.75pt'
	$System_Windows_Forms_DataGridViewCellStyle_2.ForeColor = 'Black'
	$System_Windows_Forms_DataGridViewCellStyle_2.SelectionBackColor = 'Highlight'
	$System_Windows_Forms_DataGridViewCellStyle_2.SelectionForeColor = 'Desktop'
	$System_Windows_Forms_DataGridViewCellStyle_2.WrapMode = 'False'
	$datagridview1.DefaultCellStyle = $System_Windows_Forms_DataGridViewCellStyle_2
	$datagridview1.Location = '21, 321'
	$datagridview1.Margin = '4, 3, 4, 3'
	$datagridview1.MultiSelect = $False
	$datagridview1.Name = 'datagridview1'
	$System_Windows_Forms_DataGridViewCellStyle_3 = New-Object 'System.Windows.Forms.DataGridViewCellStyle'
	$System_Windows_Forms_DataGridViewCellStyle_3.Font = 'Microsoft Sans Serif, 8.25pt'
	$datagridview1.RowsDefaultCellStyle = $System_Windows_Forms_DataGridViewCellStyle_3
	$datagridview1.RowTemplate.DefaultCellStyle.Font = 'Microsoft Sans Serif, 8.25pt'
	$datagridview1.SelectionMode = 'FullRowSelect'
	$datagridview1.Size = '999, 247'
	$datagridview1.TabIndex = 13
	$datagridview1.add_CellContentClick($datagridview1_CellContentClick)
	#
	# groupbox1
	#
	$groupbox1.Controls.Add($button1)
	$groupbox1.Controls.Add($groupbox3)
	$groupbox1.Controls.Add($labelWorkspaceONEInfo)
	$groupbox1.Controls.Add($buttonSaveToWS1)
	$groupbox1.Controls.Add($textboxGroupID)
	$groupbox1.Controls.Add($labelGroupID)
	$groupbox1.Controls.Add($Connect)
	$groupbox1.Controls.Add($textboxServer)
	$groupbox1.Controls.Add($labelServer)
	$groupbox1.Controls.Add($textboxAPI)
	$groupbox1.Controls.Add($labelAPIKey)
	$groupbox1.Controls.Add($textboxUsername)
	$groupbox1.Controls.Add($labelUsername)
	$groupbox1.Controls.Add($textboxPassword)
	$groupbox1.Controls.Add($labelPassword)
	$groupbox1.Location = '414, 22'
	$groupbox1.Margin = '4, 3, 4, 3'
	$groupbox1.Name = 'groupbox1'
	$groupbox1.Padding = '4, 3, 4, 3'
	$groupbox1.Size = '604, 291'
	$groupbox1.TabIndex = 18
	$groupbox1.TabStop = $False
	$groupbox1.UseCompatibleTextRendering = $True
	#
	# button1
	#
	$button1.Location = '261, 241'
	$button1.Margin = '4, 4, 4, 4'
	$button1.Name = 'button1'
	$button1.Size = '88, 30'
	$button1.TabIndex = 25
	$button1.Text = 'button1'
	$button1.UseCompatibleTextRendering = $True
	$button1.UseVisualStyleBackColor = $True
	$button1.add_Click($button1_Click)
	#
	# groupbox3
	#
	$groupbox3.Controls.Add($checkboxDependency)
	$groupbox3.Controls.Add($radiobuttonForceRestartCustom)
	$groupbox3.Controls.Add($labelAppOptions)
	$groupbox3.Controls.Add($radiobuttonUserDeferredRestart)
	$groupbox3.Controls.Add($radiobuttonForceRestart)
	$groupbox3.Controls.Add($radiobuttonDoNotRestart)
	$groupbox3.Location = '326, 47'
	$groupbox3.Margin = '4, 4, 4, 4'
	$groupbox3.Name = 'groupbox3'
	$groupbox3.Padding = '4, 4, 4, 4'
	$groupbox3.Size = '270, 170'
	$groupbox3.TabIndex = 24
	$groupbox3.TabStop = $False
	$groupbox3.UseCompatibleTextRendering = $True
	#
	# checkboxDependency
	#
	$checkboxDependency.Location = '8, 23'
	$checkboxDependency.Margin = '4, 4, 4, 4'
	$checkboxDependency.Name = 'checkboxDependency'
	$checkboxDependency.Size = '228, 51'
	$checkboxDependency.TabIndex = 26
	$checkboxDependency.Text = 'Create as Dependency App'
	$checkboxDependency.UseCompatibleTextRendering = $True
	$checkboxDependency.UseVisualStyleBackColor = $True
	#
	# radiobuttonForceRestartCustom
	#
	$radiobuttonForceRestartCustom.Location = '8, 136'
	$radiobuttonForceRestartCustom.Margin = '4, 4, 4, 4'
	$radiobuttonForceRestartCustom.Name = 'radiobuttonForceRestartCustom'
	$radiobuttonForceRestartCustom.Size = '157, 31'
	$radiobuttonForceRestartCustom.TabIndex = 26
	$radiobuttonForceRestartCustom.Text = 'Force Restart Custom'
	$radiobuttonForceRestartCustom.UseCompatibleTextRendering = $True
	$radiobuttonForceRestartCustom.UseVisualStyleBackColor = $True
	$radiobuttonForceRestartCustom.add_CheckedChanged($radiobuttonForceRestartCustom_CheckedChanged)
	#
	# labelAppOptions
	#
	$labelAppOptions.AutoSize = $True
	$labelAppOptions.Location = '80, 5'
	$labelAppOptions.Margin = '4, 0, 4, 0'
	$labelAppOptions.Name = 'labelAppOptions'
	$labelAppOptions.Size = '80, 22'
	$labelAppOptions.TabIndex = 25
	$labelAppOptions.Text = 'App Options'
	$labelAppOptions.UseCompatibleTextRendering = $True
	#
	# radiobuttonUserDeferredRestart
	#
	$radiobuttonUserDeferredRestart.Checked = $True
	$radiobuttonUserDeferredRestart.Location = '8, 114'
	$radiobuttonUserDeferredRestart.Margin = '4, 4, 4, 4'
	$radiobuttonUserDeferredRestart.Name = 'radiobuttonUserDeferredRestart'
	$radiobuttonUserDeferredRestart.Size = '157, 31'
	$radiobuttonUserDeferredRestart.TabIndex = 23
	$radiobuttonUserDeferredRestart.TabStop = $True
	$radiobuttonUserDeferredRestart.Text = 'User Deferred Restart'
	$radiobuttonUserDeferredRestart.UseCompatibleTextRendering = $True
	$radiobuttonUserDeferredRestart.UseVisualStyleBackColor = $True
	#
	# radiobuttonForceRestart
	#
	$radiobuttonForceRestart.Location = '8, 68'
	$radiobuttonForceRestart.Margin = '4, 4, 4, 4'
	$radiobuttonForceRestart.Name = 'radiobuttonForceRestart'
	$radiobuttonForceRestart.Size = '121, 31'
	$radiobuttonForceRestart.TabIndex = 22
	$radiobuttonForceRestart.Text = 'Force Restart'
	$radiobuttonForceRestart.UseCompatibleTextRendering = $True
	$radiobuttonForceRestart.UseVisualStyleBackColor = $True
	#
	# radiobuttonDoNotRestart
	#
	$radiobuttonDoNotRestart.Location = '8, 90'
	$radiobuttonDoNotRestart.Margin = '4, 4, 4, 4'
	$radiobuttonDoNotRestart.Name = 'radiobuttonDoNotRestart'
	$radiobuttonDoNotRestart.Size = '121, 31'
	$radiobuttonDoNotRestart.TabIndex = 21
	$radiobuttonDoNotRestart.Text = 'Do Not Restart'
	$radiobuttonDoNotRestart.UseCompatibleTextRendering = $True
	$radiobuttonDoNotRestart.UseVisualStyleBackColor = $True
	#
	# labelWorkspaceONEInfo
	#
	$labelWorkspaceONEInfo.AutoSize = $True
	$labelWorkspaceONEInfo.Location = '244, 21'
	$labelWorkspaceONEInfo.Margin = '4, 0, 4, 0'
	$labelWorkspaceONEInfo.Name = 'labelWorkspaceONEInfo'
	$labelWorkspaceONEInfo.Size = '127, 22'
	$labelWorkspaceONEInfo.TabIndex = 13
	$labelWorkspaceONEInfo.Text = 'Workspace ONE Info'
	$labelWorkspaceONEInfo.UseCompatibleTextRendering = $True
	#
	# buttonSaveToWS1
	#
	$buttonSaveToWS1.BackColor = 'White'
	$buttonSaveToWS1.ForeColor = 'Black'
	$buttonSaveToWS1.Location = '357, 234'
	$buttonSaveToWS1.Margin = '4, 3, 4, 3'
	$buttonSaveToWS1.Name = 'buttonSaveToWS1'
	$buttonSaveToWS1.Size = '117, 44'
	$buttonSaveToWS1.TabIndex = 19
	$buttonSaveToWS1.Text = 'Save To WS1'
	$buttonSaveToWS1.UseCompatibleTextRendering = $True
	$buttonSaveToWS1.UseVisualStyleBackColor = $False
	$buttonSaveToWS1.add_Click($buttonSaveToWS1_Click)
	#
	# textboxGroupID
	#
	$textboxGroupID.Location = '85, 117'
	$textboxGroupID.Margin = '4, 3, 4, 3'
	$textboxGroupID.Name = 'textboxGroupID'
	$textboxGroupID.Size = '222, 25'
	$textboxGroupID.TabIndex = 3
	#
	# labelGroupID
	#
	$labelGroupID.AutoSize = $True
	$labelGroupID.Location = '18, 120'
	$labelGroupID.Margin = '4, 0, 4, 0'
	$labelGroupID.Name = 'labelGroupID'
	$labelGroupID.Size = '59, 22'
	$labelGroupID.TabIndex = 13
	$labelGroupID.Text = 'Group ID'
	$labelGroupID.UseCompatibleTextRendering = $True
	#
	# Connect
	#
	$Connect.BackColor = 'White'
	$Connect.ForeColor = 'Black'
	$Connect.Location = '122, 234'
	$Connect.Margin = '4, 3, 4, 3'
	$Connect.Name = 'Connect'
	$Connect.Size = '105, 44'
	$Connect.TabIndex = 7
	$Connect.Text = 'Validate Credentials'
	$Connect.UseCompatibleTextRendering = $True
	$Connect.UseVisualStyleBackColor = $False
	$Connect.add_Click($Connect_Click)
	#
	# textboxServer
	#
	$textboxServer.Location = '85, 49'
	$textboxServer.Margin = '4, 3, 4, 3'
	$textboxServer.Name = 'textboxServer'
	$textboxServer.Size = '222, 25'
	$textboxServer.TabIndex = 1
	$textboxServer.Text = 'https://asXXXX.awmdm.com'
	#
	# labelServer
	#
	$labelServer.AutoSize = $True
	$labelServer.Location = '35, 52'
	$labelServer.Margin = '4, 0, 4, 0'
	$labelServer.Name = 'labelServer'
	$labelServer.Size = '42, 22'
	$labelServer.TabIndex = 2
	$labelServer.Text = 'Server'
	$labelServer.UseCompatibleTextRendering = $True
	#
	# textboxAPI
	#
	$textboxAPI.AllowDrop = $True
	$textboxAPI.Location = '85, 83'
	$textboxAPI.Margin = '4, 3, 4, 3'
	$textboxAPI.Name = 'textboxAPI'
	$textboxAPI.Size = '222, 25'
	$textboxAPI.TabIndex = 2
	#
	# labelAPIKey
	#
	$labelAPIKey.AutoSize = $True
	$labelAPIKey.Location = '28, 86'
	$labelAPIKey.Margin = '4, 0, 4, 0'
	$labelAPIKey.Name = 'labelAPIKey'
	$labelAPIKey.Size = '49, 22'
	$labelAPIKey.TabIndex = 4
	$labelAPIKey.Text = 'API Key'
	$labelAPIKey.UseCompatibleTextRendering = $True
	#
	# textboxUsername
	#
	$textboxUsername.Location = '86, 152'
	$textboxUsername.Margin = '4, 3, 4, 3'
	$textboxUsername.Name = 'textboxUsername'
	$textboxUsername.Size = '221, 25'
	$textboxUsername.TabIndex = 4
	#
	# labelUsername
	#
	$labelUsername.AutoSize = $True
	$labelUsername.Location = '13, 156'
	$labelUsername.Margin = '4, 0, 4, 0'
	$labelUsername.Name = 'labelUsername'
	$labelUsername.Size = '64, 22'
	$labelUsername.TabIndex = 6
	$labelUsername.Text = 'Username'
	$labelUsername.UseCompatibleTextRendering = $True
	#
	# textboxPassword
	#
	$textboxPassword.Location = '86, 187'
	$textboxPassword.Margin = '4, 3, 4, 3'
	$textboxPassword.Name = 'textboxPassword'
	$textboxPassword.Size = '221, 25'
	$textboxPassword.TabIndex = 5
	$textboxPassword.UseSystemPasswordChar = $True
	#
	# labelPassword
	#
	$labelPassword.AutoSize = $True
	$labelPassword.Location = '16, 190'
	$labelPassword.Margin = '4, 0, 4, 0'
	$labelPassword.Name = 'labelPassword'
	$labelPassword.Size = '61, 22'
	$labelPassword.TabIndex = 8
	$labelPassword.Text = 'Password'
	$labelPassword.UseCompatibleTextRendering = $True
	#
	# tooltipConnect
	#
	$tooltipConnect.AutomaticDelay = 0
	$tooltipConnect.AutoPopDelay = 0
	$tooltipConnect.InitialDelay = 1
	$tooltipConnect.ReshowDelay = 100
	$tooltipConnect.ToolTipIcon = 'Info'
	$tooltipConnect.ToolTipTitle = 'Validate Credentials'
	#
	# tooltipDependencyApp
	#
	$tooltipDependencyApp.AutoPopDelay = 5000
	$tooltipDependencyApp.InitialDelay = 1
	$tooltipDependencyApp.ReshowDelay = 100
	$tooltipDependencyApp.ToolTipIcon = 'Info'
	$tooltipDependencyApp.ToolTipTitle = 'Dependency App'
	#
	# tooltipForceRestart
	#
	$tooltipForceRestart.AutoPopDelay = 5000
	$tooltipForceRestart.InitialDelay = 1
	$tooltipForceRestart.ReshowDelay = 100
	$tooltipForceRestart.ToolTipIcon = 'Info'
	$tooltipForceRestart.ToolTipTitle = 'Force Restart'
	#
	# tooltipDoNotRestart
	#
	$tooltipDoNotRestart.AutoPopDelay = 5000
	$tooltipDoNotRestart.InitialDelay = 1
	$tooltipDoNotRestart.ReshowDelay = 100
	$tooltipDoNotRestart.ToolTipIcon = 'Info'
	$tooltipDoNotRestart.ToolTipTitle = 'Do Not Restart'
	#
	# tooltipUserDeferredRestart
	#
	$tooltipUserDeferredRestart.AutoPopDelay = 5000
	$tooltipUserDeferredRestart.InitialDelay = 1
	$tooltipUserDeferredRestart.ReshowDelay = 100
	$tooltipUserDeferredRestart.ToolTipIcon = 'Info'
	$tooltipUserDeferredRestart.ToolTipTitle = 'User Deferred Restart'
	#
	# notifyicon1
	#
	$notifyicon1.Text = 'notifyicon1'
	$notifyicon1.Visible = $True
	#
	# tooltipCustomRestart
	#
	$tooltipCustomRestart.AutoPopDelay = 15000
	$tooltipCustomRestart.InitialDelay = 1
	$tooltipCustomRestart.ReshowDelay = 100
	$tooltipCustomRestart.ToolTipIcon = 'Info'
	$tooltipCustomRestart.ToolTipTitle = 'Force Restart Custom'
	$groupbox3.ResumeLayout()
	$groupbox1.ResumeLayout()
	$groupbox2.ResumeLayout()
	$formWindowsUpdaterToolFo.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $formWindowsUpdaterToolFo.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$formWindowsUpdaterToolFo.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$formWindowsUpdaterToolFo.add_FormClosed($Form_Cleanup_FormClosed)
	#Store the control values when form is closing
	$formWindowsUpdaterToolFo.add_Closing($Form_StoreValues_Closing)
	#Show the Form
	return $formWindowsUpdaterToolFo.ShowDialog()

}
#endregion Source: MainForm.psf

#Start the application
Main ($CommandLine)
